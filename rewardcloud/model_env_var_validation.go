/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.7.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
	"time"
)

// checks if the EnvVarValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvVarValidation{}

// EnvVarValidation Class EnvVarValidation
type EnvVarValidation struct {
	Id                *int32         `json:"id,omitempty"`
	Uuid              NullableString `json:"uuid,omitempty"`
	Name              NullableString `json:"name,omitempty"`
	Regexp            NullableString `json:"regexp,omitempty"`
	ValidationMessage NullableString `json:"validationMessage,omitempty"`
	CreatedBy         NullableString `json:"createdBy,omitempty"`
	UpdatedBy         NullableString `json:"updatedBy,omitempty"`
	CreatedAt         *time.Time     `json:"createdAt,omitempty"`
	UpdatedAt         *time.Time     `json:"updatedAt,omitempty"`
}

// NewEnvVarValidation instantiates a new EnvVarValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvVarValidation() *EnvVarValidation {
	this := EnvVarValidation{}
	return &this
}

// NewEnvVarValidationWithDefaults instantiates a new EnvVarValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvVarValidationWithDefaults() *EnvVarValidation {
	this := EnvVarValidation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnvVarValidation) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvVarValidation) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnvVarValidation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EnvVarValidation) SetId(v int32) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvVarValidation) GetUuid() string {
	if o == nil || IsNil(o.Uuid.Get()) {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvVarValidation) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *EnvVarValidation) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *EnvVarValidation) SetUuid(v string) {
	o.Uuid.Set(&v)
}

// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *EnvVarValidation) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *EnvVarValidation) UnsetUuid() {
	o.Uuid.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvVarValidation) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvVarValidation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EnvVarValidation) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EnvVarValidation) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *EnvVarValidation) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EnvVarValidation) UnsetName() {
	o.Name.Unset()
}

// GetRegexp returns the Regexp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvVarValidation) GetRegexp() string {
	if o == nil || IsNil(o.Regexp.Get()) {
		var ret string
		return ret
	}
	return *o.Regexp.Get()
}

// GetRegexpOk returns a tuple with the Regexp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvVarValidation) GetRegexpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Regexp.Get(), o.Regexp.IsSet()
}

// HasRegexp returns a boolean if a field has been set.
func (o *EnvVarValidation) HasRegexp() bool {
	if o != nil && o.Regexp.IsSet() {
		return true
	}

	return false
}

// SetRegexp gets a reference to the given NullableString and assigns it to the Regexp field.
func (o *EnvVarValidation) SetRegexp(v string) {
	o.Regexp.Set(&v)
}

// SetRegexpNil sets the value for Regexp to be an explicit nil
func (o *EnvVarValidation) SetRegexpNil() {
	o.Regexp.Set(nil)
}

// UnsetRegexp ensures that no value is present for Regexp, not even an explicit nil
func (o *EnvVarValidation) UnsetRegexp() {
	o.Regexp.Unset()
}

// GetValidationMessage returns the ValidationMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvVarValidation) GetValidationMessage() string {
	if o == nil || IsNil(o.ValidationMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ValidationMessage.Get()
}

// GetValidationMessageOk returns a tuple with the ValidationMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvVarValidation) GetValidationMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidationMessage.Get(), o.ValidationMessage.IsSet()
}

// HasValidationMessage returns a boolean if a field has been set.
func (o *EnvVarValidation) HasValidationMessage() bool {
	if o != nil && o.ValidationMessage.IsSet() {
		return true
	}

	return false
}

// SetValidationMessage gets a reference to the given NullableString and assigns it to the ValidationMessage field.
func (o *EnvVarValidation) SetValidationMessage(v string) {
	o.ValidationMessage.Set(&v)
}

// SetValidationMessageNil sets the value for ValidationMessage to be an explicit nil
func (o *EnvVarValidation) SetValidationMessageNil() {
	o.ValidationMessage.Set(nil)
}

// UnsetValidationMessage ensures that no value is present for ValidationMessage, not even an explicit nil
func (o *EnvVarValidation) UnsetValidationMessage() {
	o.ValidationMessage.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvVarValidation) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvVarValidation) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EnvVarValidation) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *EnvVarValidation) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *EnvVarValidation) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *EnvVarValidation) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvVarValidation) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvVarValidation) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *EnvVarValidation) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *EnvVarValidation) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}

// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *EnvVarValidation) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *EnvVarValidation) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EnvVarValidation) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvVarValidation) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EnvVarValidation) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *EnvVarValidation) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EnvVarValidation) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvVarValidation) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EnvVarValidation) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *EnvVarValidation) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o EnvVarValidation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvVarValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Regexp.IsSet() {
		toSerialize["regexp"] = o.Regexp.Get()
	}
	if o.ValidationMessage.IsSet() {
		toSerialize["validationMessage"] = o.ValidationMessage.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableEnvVarValidation struct {
	value *EnvVarValidation
	isSet bool
}

func (v NullableEnvVarValidation) Get() *EnvVarValidation {
	return v.value
}

func (v *NullableEnvVarValidation) Set(val *EnvVarValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvVarValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvVarValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvVarValidation(val *EnvVarValidation) *NullableEnvVarValidation {
	return &NullableEnvVarValidation{value: val, isSet: true}
}

func (v NullableEnvVarValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvVarValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
