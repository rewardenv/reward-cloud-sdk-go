/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.7.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
	"fmt"
)

// GitProjectOutputCredentialType struct for GitProjectOutputCredentialType
type GitProjectOutputCredentialType struct {
	CredentialTypeProjectOutput *CredentialTypeProjectOutput
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *GitProjectOutputCredentialType) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	// try to unmarshal JSON data into CredentialTypeProjectOutput
	err = json.Unmarshal(data, &dst.CredentialTypeProjectOutput)
	if err == nil {
		jsonCredentialTypeProjectOutput, _ := json.Marshal(dst.CredentialTypeProjectOutput)
		if string(jsonCredentialTypeProjectOutput) == "{}" { // empty struct
			dst.CredentialTypeProjectOutput = nil
		} else {
			return nil // data stored in dst.CredentialTypeProjectOutput, return on the first match
		}
	} else {
		dst.CredentialTypeProjectOutput = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(GitProjectOutputCredentialType)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *GitProjectOutputCredentialType) MarshalJSON() ([]byte, error) {
	if src.CredentialTypeProjectOutput != nil {
		return json.Marshal(&src.CredentialTypeProjectOutput)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableGitProjectOutputCredentialType struct {
	value *GitProjectOutputCredentialType
	isSet bool
}

func (v NullableGitProjectOutputCredentialType) Get() *GitProjectOutputCredentialType {
	return v.value
}

func (v *NullableGitProjectOutputCredentialType) Set(val *GitProjectOutputCredentialType) {
	v.value = val
	v.isSet = true
}

func (v NullableGitProjectOutputCredentialType) IsSet() bool {
	return v.isSet
}

func (v *NullableGitProjectOutputCredentialType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitProjectOutputCredentialType(val *GitProjectOutputCredentialType) *NullableGitProjectOutputCredentialType {
	return &NullableGitProjectOutputCredentialType{value: val, isSet: true}
}

func (v NullableGitProjectOutputCredentialType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitProjectOutputCredentialType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
