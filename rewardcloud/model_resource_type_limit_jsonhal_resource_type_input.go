/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
)

// checks if the ResourceTypeLimitJsonhalResourceTypeInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceTypeLimitJsonhalResourceTypeInput{}

// ResourceTypeLimitJsonhalResourceTypeInput
type ResourceTypeLimitJsonhalResourceTypeInput struct {
	Links               *AbstractEnvironmentJsonhalLinks `json:"_links,omitempty"`
	ProjectMinValue     NullableInt32                    `json:"projectMinValue,omitempty"`
	ProjectMaxValue     NullableInt32                    `json:"projectMaxValue,omitempty"`
	EnvironmentMinValue NullableInt32                    `json:"environmentMinValue,omitempty"`
	EnvironmentMaxValue NullableInt32                    `json:"environmentMaxValue,omitempty"`
	ComponentMinValue   NullableInt32                    `json:"componentMinValue,omitempty"`
	ComponentMaxValue   NullableInt32                    `json:"componentMaxValue,omitempty"`
}

// NewResourceTypeLimitJsonhalResourceTypeInput instantiates a new ResourceTypeLimitJsonhalResourceTypeInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceTypeLimitJsonhalResourceTypeInput() *ResourceTypeLimitJsonhalResourceTypeInput {
	this := ResourceTypeLimitJsonhalResourceTypeInput{}
	return &this
}

// NewResourceTypeLimitJsonhalResourceTypeInputWithDefaults instantiates a new ResourceTypeLimitJsonhalResourceTypeInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceTypeLimitJsonhalResourceTypeInputWithDefaults() *ResourceTypeLimitJsonhalResourceTypeInput {
	this := ResourceTypeLimitJsonhalResourceTypeInput{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetLinks() AbstractEnvironmentJsonhalLinks {
	if o == nil || IsNil(o.Links) {
		var ret AbstractEnvironmentJsonhalLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetLinksOk() (*AbstractEnvironmentJsonhalLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AbstractEnvironmentJsonhalLinks and assigns it to the Links field.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetLinks(v AbstractEnvironmentJsonhalLinks) {
	o.Links = &v
}

// GetProjectMinValue returns the ProjectMinValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetProjectMinValue() int32 {
	if o == nil || IsNil(o.ProjectMinValue.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectMinValue.Get()
}

// GetProjectMinValueOk returns a tuple with the ProjectMinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetProjectMinValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectMinValue.Get(), o.ProjectMinValue.IsSet()
}

// HasProjectMinValue returns a boolean if a field has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) HasProjectMinValue() bool {
	if o != nil && o.ProjectMinValue.IsSet() {
		return true
	}

	return false
}

// SetProjectMinValue gets a reference to the given NullableInt32 and assigns it to the ProjectMinValue field.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetProjectMinValue(v int32) {
	o.ProjectMinValue.Set(&v)
}

// SetProjectMinValueNil sets the value for ProjectMinValue to be an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetProjectMinValueNil() {
	o.ProjectMinValue.Set(nil)
}

// UnsetProjectMinValue ensures that no value is present for ProjectMinValue, not even an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) UnsetProjectMinValue() {
	o.ProjectMinValue.Unset()
}

// GetProjectMaxValue returns the ProjectMaxValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetProjectMaxValue() int32 {
	if o == nil || IsNil(o.ProjectMaxValue.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectMaxValue.Get()
}

// GetProjectMaxValueOk returns a tuple with the ProjectMaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetProjectMaxValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectMaxValue.Get(), o.ProjectMaxValue.IsSet()
}

// HasProjectMaxValue returns a boolean if a field has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) HasProjectMaxValue() bool {
	if o != nil && o.ProjectMaxValue.IsSet() {
		return true
	}

	return false
}

// SetProjectMaxValue gets a reference to the given NullableInt32 and assigns it to the ProjectMaxValue field.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetProjectMaxValue(v int32) {
	o.ProjectMaxValue.Set(&v)
}

// SetProjectMaxValueNil sets the value for ProjectMaxValue to be an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetProjectMaxValueNil() {
	o.ProjectMaxValue.Set(nil)
}

// UnsetProjectMaxValue ensures that no value is present for ProjectMaxValue, not even an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) UnsetProjectMaxValue() {
	o.ProjectMaxValue.Unset()
}

// GetEnvironmentMinValue returns the EnvironmentMinValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetEnvironmentMinValue() int32 {
	if o == nil || IsNil(o.EnvironmentMinValue.Get()) {
		var ret int32
		return ret
	}
	return *o.EnvironmentMinValue.Get()
}

// GetEnvironmentMinValueOk returns a tuple with the EnvironmentMinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetEnvironmentMinValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentMinValue.Get(), o.EnvironmentMinValue.IsSet()
}

// HasEnvironmentMinValue returns a boolean if a field has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) HasEnvironmentMinValue() bool {
	if o != nil && o.EnvironmentMinValue.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentMinValue gets a reference to the given NullableInt32 and assigns it to the EnvironmentMinValue field.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetEnvironmentMinValue(v int32) {
	o.EnvironmentMinValue.Set(&v)
}

// SetEnvironmentMinValueNil sets the value for EnvironmentMinValue to be an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetEnvironmentMinValueNil() {
	o.EnvironmentMinValue.Set(nil)
}

// UnsetEnvironmentMinValue ensures that no value is present for EnvironmentMinValue, not even an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) UnsetEnvironmentMinValue() {
	o.EnvironmentMinValue.Unset()
}

// GetEnvironmentMaxValue returns the EnvironmentMaxValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetEnvironmentMaxValue() int32 {
	if o == nil || IsNil(o.EnvironmentMaxValue.Get()) {
		var ret int32
		return ret
	}
	return *o.EnvironmentMaxValue.Get()
}

// GetEnvironmentMaxValueOk returns a tuple with the EnvironmentMaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetEnvironmentMaxValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentMaxValue.Get(), o.EnvironmentMaxValue.IsSet()
}

// HasEnvironmentMaxValue returns a boolean if a field has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) HasEnvironmentMaxValue() bool {
	if o != nil && o.EnvironmentMaxValue.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentMaxValue gets a reference to the given NullableInt32 and assigns it to the EnvironmentMaxValue field.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetEnvironmentMaxValue(v int32) {
	o.EnvironmentMaxValue.Set(&v)
}

// SetEnvironmentMaxValueNil sets the value for EnvironmentMaxValue to be an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetEnvironmentMaxValueNil() {
	o.EnvironmentMaxValue.Set(nil)
}

// UnsetEnvironmentMaxValue ensures that no value is present for EnvironmentMaxValue, not even an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) UnsetEnvironmentMaxValue() {
	o.EnvironmentMaxValue.Unset()
}

// GetComponentMinValue returns the ComponentMinValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetComponentMinValue() int32 {
	if o == nil || IsNil(o.ComponentMinValue.Get()) {
		var ret int32
		return ret
	}
	return *o.ComponentMinValue.Get()
}

// GetComponentMinValueOk returns a tuple with the ComponentMinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetComponentMinValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComponentMinValue.Get(), o.ComponentMinValue.IsSet()
}

// HasComponentMinValue returns a boolean if a field has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) HasComponentMinValue() bool {
	if o != nil && o.ComponentMinValue.IsSet() {
		return true
	}

	return false
}

// SetComponentMinValue gets a reference to the given NullableInt32 and assigns it to the ComponentMinValue field.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetComponentMinValue(v int32) {
	o.ComponentMinValue.Set(&v)
}

// SetComponentMinValueNil sets the value for ComponentMinValue to be an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetComponentMinValueNil() {
	o.ComponentMinValue.Set(nil)
}

// UnsetComponentMinValue ensures that no value is present for ComponentMinValue, not even an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) UnsetComponentMinValue() {
	o.ComponentMinValue.Unset()
}

// GetComponentMaxValue returns the ComponentMaxValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetComponentMaxValue() int32 {
	if o == nil || IsNil(o.ComponentMaxValue.Get()) {
		var ret int32
		return ret
	}
	return *o.ComponentMaxValue.Get()
}

// GetComponentMaxValueOk returns a tuple with the ComponentMaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceTypeLimitJsonhalResourceTypeInput) GetComponentMaxValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComponentMaxValue.Get(), o.ComponentMaxValue.IsSet()
}

// HasComponentMaxValue returns a boolean if a field has been set.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) HasComponentMaxValue() bool {
	if o != nil && o.ComponentMaxValue.IsSet() {
		return true
	}

	return false
}

// SetComponentMaxValue gets a reference to the given NullableInt32 and assigns it to the ComponentMaxValue field.
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetComponentMaxValue(v int32) {
	o.ComponentMaxValue.Set(&v)
}

// SetComponentMaxValueNil sets the value for ComponentMaxValue to be an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) SetComponentMaxValueNil() {
	o.ComponentMaxValue.Set(nil)
}

// UnsetComponentMaxValue ensures that no value is present for ComponentMaxValue, not even an explicit nil
func (o *ResourceTypeLimitJsonhalResourceTypeInput) UnsetComponentMaxValue() {
	o.ComponentMaxValue.Unset()
}

func (o ResourceTypeLimitJsonhalResourceTypeInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceTypeLimitJsonhalResourceTypeInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if o.ProjectMinValue.IsSet() {
		toSerialize["projectMinValue"] = o.ProjectMinValue.Get()
	}
	if o.ProjectMaxValue.IsSet() {
		toSerialize["projectMaxValue"] = o.ProjectMaxValue.Get()
	}
	if o.EnvironmentMinValue.IsSet() {
		toSerialize["environmentMinValue"] = o.EnvironmentMinValue.Get()
	}
	if o.EnvironmentMaxValue.IsSet() {
		toSerialize["environmentMaxValue"] = o.EnvironmentMaxValue.Get()
	}
	if o.ComponentMinValue.IsSet() {
		toSerialize["componentMinValue"] = o.ComponentMinValue.Get()
	}
	if o.ComponentMaxValue.IsSet() {
		toSerialize["componentMaxValue"] = o.ComponentMaxValue.Get()
	}
	return toSerialize, nil
}

type NullableResourceTypeLimitJsonhalResourceTypeInput struct {
	value *ResourceTypeLimitJsonhalResourceTypeInput
	isSet bool
}

func (v NullableResourceTypeLimitJsonhalResourceTypeInput) Get() *ResourceTypeLimitJsonhalResourceTypeInput {
	return v.value
}

func (v *NullableResourceTypeLimitJsonhalResourceTypeInput) Set(val *ResourceTypeLimitJsonhalResourceTypeInput) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceTypeLimitJsonhalResourceTypeInput) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceTypeLimitJsonhalResourceTypeInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceTypeLimitJsonhalResourceTypeInput(val *ResourceTypeLimitJsonhalResourceTypeInput) *NullableResourceTypeLimitJsonhalResourceTypeInput {
	return &NullableResourceTypeLimitJsonhalResourceTypeInput{value: val, isSet: true}
}

func (v NullableResourceTypeLimitJsonhalResourceTypeInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceTypeLimitJsonhalResourceTypeInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
