/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
	"fmt"
)

// GitJsonhalProjectPostCredentialType struct for GitJsonhalProjectPostCredentialType
type GitJsonhalProjectPostCredentialType struct {
	CredentialTypeJsonhalProjectPost *CredentialTypeJsonhalProjectPost
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *GitJsonhalProjectPostCredentialType) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	// try to unmarshal JSON data into CredentialTypeJsonhalProjectPost
	err = json.Unmarshal(data, &dst.CredentialTypeJsonhalProjectPost);
	if err == nil {
		jsonCredentialTypeJsonhalProjectPost, _ := json.Marshal(dst.CredentialTypeJsonhalProjectPost)
		if string(jsonCredentialTypeJsonhalProjectPost) == "{}" { // empty struct
			dst.CredentialTypeJsonhalProjectPost = nil
		} else {
			return nil // data stored in dst.CredentialTypeJsonhalProjectPost, return on the first match
		}
	} else {
		dst.CredentialTypeJsonhalProjectPost = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(GitJsonhalProjectPostCredentialType)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *GitJsonhalProjectPostCredentialType) MarshalJSON() ([]byte, error) {
	if src.CredentialTypeJsonhalProjectPost != nil {
		return json.Marshal(&src.CredentialTypeJsonhalProjectPost)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableGitJsonhalProjectPostCredentialType struct {
	value *GitJsonhalProjectPostCredentialType
	isSet bool
}

func (v NullableGitJsonhalProjectPostCredentialType) Get() *GitJsonhalProjectPostCredentialType {
	return v.value
}

func (v *NullableGitJsonhalProjectPostCredentialType) Set(val *GitJsonhalProjectPostCredentialType) {
	v.value = val
	v.isSet = true
}

func (v NullableGitJsonhalProjectPostCredentialType) IsSet() bool {
	return v.isSet
}

func (v *NullableGitJsonhalProjectPostCredentialType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitJsonhalProjectPostCredentialType(val *GitJsonhalProjectPostCredentialType) *NullableGitJsonhalProjectPostCredentialType {
	return &NullableGitJsonhalProjectPostCredentialType{value: val, isSet: true}
}

func (v NullableGitJsonhalProjectPostCredentialType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitJsonhalProjectPostCredentialType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


