/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
)

// OrganisationOrganisationPost Class Organisation
type OrganisationOrganisationPost struct {
	Name               NullableString                       `json:"name,omitempty"`
	CodeName           NullableString                       `json:"codeName,omitempty"`
	IsDefault          NullableBool                         `json:"isDefault,omitempty"`
	Team               []string                             `json:"team,omitempty"`
	OrganisationEnvVar []OrganisationEnvVarOrganisationPost `json:"organisationEnvVar,omitempty"`
}

// NewOrganisationOrganisationPost instantiates a new OrganisationOrganisationPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganisationOrganisationPost() *OrganisationOrganisationPost {
	this := OrganisationOrganisationPost{}
	return &this
}

// NewOrganisationOrganisationPostWithDefaults instantiates a new OrganisationOrganisationPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganisationOrganisationPostWithDefaults() *OrganisationOrganisationPost {
	this := OrganisationOrganisationPost{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganisationOrganisationPost) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganisationOrganisationPost) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *OrganisationOrganisationPost) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *OrganisationOrganisationPost) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *OrganisationOrganisationPost) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *OrganisationOrganisationPost) UnsetName() {
	o.Name.Unset()
}

// GetCodeName returns the CodeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganisationOrganisationPost) GetCodeName() string {
	if o == nil || isNil(o.CodeName.Get()) {
		var ret string
		return ret
	}
	return *o.CodeName.Get()
}

// GetCodeNameOk returns a tuple with the CodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganisationOrganisationPost) GetCodeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CodeName.Get(), o.CodeName.IsSet()
}

// HasCodeName returns a boolean if a field has been set.
func (o *OrganisationOrganisationPost) HasCodeName() bool {
	if o != nil && o.CodeName.IsSet() {
		return true
	}

	return false
}

// SetCodeName gets a reference to the given NullableString and assigns it to the CodeName field.
func (o *OrganisationOrganisationPost) SetCodeName(v string) {
	o.CodeName.Set(&v)
}

// SetCodeNameNil sets the value for CodeName to be an explicit nil
func (o *OrganisationOrganisationPost) SetCodeNameNil() {
	o.CodeName.Set(nil)
}

// UnsetCodeName ensures that no value is present for CodeName, not even an explicit nil
func (o *OrganisationOrganisationPost) UnsetCodeName() {
	o.CodeName.Unset()
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganisationOrganisationPost) GetIsDefault() bool {
	if o == nil || isNil(o.IsDefault.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDefault.Get()
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganisationOrganisationPost) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDefault.Get(), o.IsDefault.IsSet()
}

// HasIsDefault returns a boolean if a field has been set.
func (o *OrganisationOrganisationPost) HasIsDefault() bool {
	if o != nil && o.IsDefault.IsSet() {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given NullableBool and assigns it to the IsDefault field.
func (o *OrganisationOrganisationPost) SetIsDefault(v bool) {
	o.IsDefault.Set(&v)
}

// SetIsDefaultNil sets the value for IsDefault to be an explicit nil
func (o *OrganisationOrganisationPost) SetIsDefaultNil() {
	o.IsDefault.Set(nil)
}

// UnsetIsDefault ensures that no value is present for IsDefault, not even an explicit nil
func (o *OrganisationOrganisationPost) UnsetIsDefault() {
	o.IsDefault.Unset()
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *OrganisationOrganisationPost) GetTeam() []string {
	if o == nil || isNil(o.Team) {
		var ret []string
		return ret
	}
	return o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationOrganisationPost) GetTeamOk() ([]string, bool) {
	if o == nil || isNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *OrganisationOrganisationPost) HasTeam() bool {
	if o != nil && !isNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given []string and assigns it to the Team field.
func (o *OrganisationOrganisationPost) SetTeam(v []string) {
	o.Team = v
}

// GetOrganisationEnvVar returns the OrganisationEnvVar field value if set, zero value otherwise.
func (o *OrganisationOrganisationPost) GetOrganisationEnvVar() []OrganisationEnvVarOrganisationPost {
	if o == nil || isNil(o.OrganisationEnvVar) {
		var ret []OrganisationEnvVarOrganisationPost
		return ret
	}
	return o.OrganisationEnvVar
}

// GetOrganisationEnvVarOk returns a tuple with the OrganisationEnvVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationOrganisationPost) GetOrganisationEnvVarOk() ([]OrganisationEnvVarOrganisationPost, bool) {
	if o == nil || isNil(o.OrganisationEnvVar) {
		return nil, false
	}
	return o.OrganisationEnvVar, true
}

// HasOrganisationEnvVar returns a boolean if a field has been set.
func (o *OrganisationOrganisationPost) HasOrganisationEnvVar() bool {
	if o != nil && !isNil(o.OrganisationEnvVar) {
		return true
	}

	return false
}

// SetOrganisationEnvVar gets a reference to the given []OrganisationEnvVarOrganisationPost and assigns it to the OrganisationEnvVar field.
func (o *OrganisationOrganisationPost) SetOrganisationEnvVar(v []OrganisationEnvVarOrganisationPost) {
	o.OrganisationEnvVar = v
}

func (o OrganisationOrganisationPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.CodeName.IsSet() {
		toSerialize["codeName"] = o.CodeName.Get()
	}
	if o.IsDefault.IsSet() {
		toSerialize["isDefault"] = o.IsDefault.Get()
	}
	if !isNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !isNil(o.OrganisationEnvVar) {
		toSerialize["organisationEnvVar"] = o.OrganisationEnvVar
	}
	return json.Marshal(toSerialize)
}

type NullableOrganisationOrganisationPost struct {
	value *OrganisationOrganisationPost
	isSet bool
}

func (v NullableOrganisationOrganisationPost) Get() *OrganisationOrganisationPost {
	return v.value
}

func (v *NullableOrganisationOrganisationPost) Set(val *OrganisationOrganisationPost) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationOrganisationPost) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationOrganisationPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationOrganisationPost(val *OrganisationOrganisationPost) *NullableOrganisationOrganisationPost {
	return &NullableOrganisationOrganisationPost{value: val, isSet: true}
}

func (v NullableOrganisationOrganisationPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationOrganisationPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
