/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
)

// ServiceAccountJsonhal Class ServiceAccount
type ServiceAccountJsonhal struct {
	Links *ComponentJsonhalLinks `json:"_links,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Email NullableString `json:"email,omitempty"`
	Username NullableString `json:"username,omitempty"`
	Password NullableString `json:"password,omitempty"`
	Project NullableString `json:"project,omitempty"`
	ServiceAccountGit NullableString `json:"serviceAccountGit,omitempty"`
	ServiceAccountRegistry NullableString `json:"serviceAccountRegistry,omitempty"`
	CreatedBy NullableString `json:"createdBy,omitempty"`
	UpdatedBy NullableString `json:"updatedBy,omitempty"`
}

// NewServiceAccountJsonhal instantiates a new ServiceAccountJsonhal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountJsonhal() *ServiceAccountJsonhal {
	this := ServiceAccountJsonhal{}
	return &this
}

// NewServiceAccountJsonhalWithDefaults instantiates a new ServiceAccountJsonhal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountJsonhalWithDefaults() *ServiceAccountJsonhal {
	this := ServiceAccountJsonhal{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ServiceAccountJsonhal) GetLinks() ComponentJsonhalLinks {
	if o == nil || isNil(o.Links) {
		var ret ComponentJsonhalLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountJsonhal) GetLinksOk() (*ComponentJsonhalLinks, bool) {
	if o == nil || isNil(o.Links) {
    return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasLinks() bool {
	if o != nil && !isNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ComponentJsonhalLinks and assigns it to the Links field.
func (o *ServiceAccountJsonhal) SetLinks(v ComponentJsonhalLinks) {
	o.Links = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceAccountJsonhal) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountJsonhal) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServiceAccountJsonhal) SetId(v int32) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ServiceAccountJsonhal) GetUuid() string {
	if o == nil || isNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountJsonhal) GetUuidOk() (*string, bool) {
	if o == nil || isNil(o.Uuid) {
    return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ServiceAccountJsonhal) SetUuid(v string) {
	o.Uuid = &v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetEmail() string {
	if o == nil || isNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetEmailOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *ServiceAccountJsonhal) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *ServiceAccountJsonhal) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetEmail() {
	o.Email.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetUsername() string {
	if o == nil || isNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *ServiceAccountJsonhal) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *ServiceAccountJsonhal) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetPassword() string {
	if o == nil || isNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *ServiceAccountJsonhal) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *ServiceAccountJsonhal) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetPassword() {
	o.Password.Unset()
}

// GetProject returns the Project field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetProject() string {
	if o == nil || isNil(o.Project.Get()) {
		var ret string
		return ret
	}
	return *o.Project.Get()
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetProjectOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Project.Get(), o.Project.IsSet()
}

// HasProject returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasProject() bool {
	if o != nil && o.Project.IsSet() {
		return true
	}

	return false
}

// SetProject gets a reference to the given NullableString and assigns it to the Project field.
func (o *ServiceAccountJsonhal) SetProject(v string) {
	o.Project.Set(&v)
}
// SetProjectNil sets the value for Project to be an explicit nil
func (o *ServiceAccountJsonhal) SetProjectNil() {
	o.Project.Set(nil)
}

// UnsetProject ensures that no value is present for Project, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetProject() {
	o.Project.Unset()
}

// GetServiceAccountGit returns the ServiceAccountGit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetServiceAccountGit() string {
	if o == nil || isNil(o.ServiceAccountGit.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceAccountGit.Get()
}

// GetServiceAccountGitOk returns a tuple with the ServiceAccountGit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetServiceAccountGitOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ServiceAccountGit.Get(), o.ServiceAccountGit.IsSet()
}

// HasServiceAccountGit returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasServiceAccountGit() bool {
	if o != nil && o.ServiceAccountGit.IsSet() {
		return true
	}

	return false
}

// SetServiceAccountGit gets a reference to the given NullableString and assigns it to the ServiceAccountGit field.
func (o *ServiceAccountJsonhal) SetServiceAccountGit(v string) {
	o.ServiceAccountGit.Set(&v)
}
// SetServiceAccountGitNil sets the value for ServiceAccountGit to be an explicit nil
func (o *ServiceAccountJsonhal) SetServiceAccountGitNil() {
	o.ServiceAccountGit.Set(nil)
}

// UnsetServiceAccountGit ensures that no value is present for ServiceAccountGit, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetServiceAccountGit() {
	o.ServiceAccountGit.Unset()
}

// GetServiceAccountRegistry returns the ServiceAccountRegistry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetServiceAccountRegistry() string {
	if o == nil || isNil(o.ServiceAccountRegistry.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceAccountRegistry.Get()
}

// GetServiceAccountRegistryOk returns a tuple with the ServiceAccountRegistry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetServiceAccountRegistryOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ServiceAccountRegistry.Get(), o.ServiceAccountRegistry.IsSet()
}

// HasServiceAccountRegistry returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasServiceAccountRegistry() bool {
	if o != nil && o.ServiceAccountRegistry.IsSet() {
		return true
	}

	return false
}

// SetServiceAccountRegistry gets a reference to the given NullableString and assigns it to the ServiceAccountRegistry field.
func (o *ServiceAccountJsonhal) SetServiceAccountRegistry(v string) {
	o.ServiceAccountRegistry.Set(&v)
}
// SetServiceAccountRegistryNil sets the value for ServiceAccountRegistry to be an explicit nil
func (o *ServiceAccountJsonhal) SetServiceAccountRegistryNil() {
	o.ServiceAccountRegistry.Set(nil)
}

// UnsetServiceAccountRegistry ensures that no value is present for ServiceAccountRegistry, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetServiceAccountRegistry() {
	o.ServiceAccountRegistry.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetCreatedBy() string {
	if o == nil || isNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetCreatedByOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *ServiceAccountJsonhal) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *ServiceAccountJsonhal) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountJsonhal) GetUpdatedBy() string {
	if o == nil || isNil(o.UpdatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountJsonhal) GetUpdatedByOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ServiceAccountJsonhal) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *ServiceAccountJsonhal) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}
// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *ServiceAccountJsonhal) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *ServiceAccountJsonhal) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

func (o ServiceAccountJsonhal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Project.IsSet() {
		toSerialize["project"] = o.Project.Get()
	}
	if o.ServiceAccountGit.IsSet() {
		toSerialize["serviceAccountGit"] = o.ServiceAccountGit.Get()
	}
	if o.ServiceAccountRegistry.IsSet() {
		toSerialize["serviceAccountRegistry"] = o.ServiceAccountRegistry.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableServiceAccountJsonhal struct {
	value *ServiceAccountJsonhal
	isSet bool
}

func (v NullableServiceAccountJsonhal) Get() *ServiceAccountJsonhal {
	return v.value
}

func (v *NullableServiceAccountJsonhal) Set(val *ServiceAccountJsonhal) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountJsonhal) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountJsonhal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountJsonhal(val *ServiceAccountJsonhal) *NullableServiceAccountJsonhal {
	return &NullableServiceAccountJsonhal{value: val, isSet: true}
}

func (v NullableServiceAccountJsonhal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountJsonhal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


