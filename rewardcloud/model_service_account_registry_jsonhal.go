/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
)

// checks if the ServiceAccountRegistryJsonhal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountRegistryJsonhal{}

// ServiceAccountRegistryJsonhal Class Registry
type ServiceAccountRegistryJsonhal struct {
	Links          *AbstractEnvironmentJsonhalLinks `json:"_links,omitempty"`
	Id             *int32                           `json:"id,omitempty"`
	Uuid           *string                          `json:"uuid,omitempty"`
	Quota          NullableInt32                    `json:"quota,omitempty"`
	Instance       NullableString                   `json:"instance,omitempty"`
	Url            NullableString                   `json:"url,omitempty"`
	Email          NullableString                   `json:"email,omitempty"`
	Username       NullableString                   `json:"username,omitempty"`
	Password       NullableString                   `json:"password,omitempty"`
	ServiceAccount NullableString                   `json:"serviceAccount,omitempty"`
	CreatedBy      NullableString                   `json:"createdBy,omitempty"`
	UpdatedBy      NullableString                   `json:"updatedBy,omitempty"`
}

// NewServiceAccountRegistryJsonhal instantiates a new ServiceAccountRegistryJsonhal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountRegistryJsonhal() *ServiceAccountRegistryJsonhal {
	this := ServiceAccountRegistryJsonhal{}
	return &this
}

// NewServiceAccountRegistryJsonhalWithDefaults instantiates a new ServiceAccountRegistryJsonhal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountRegistryJsonhalWithDefaults() *ServiceAccountRegistryJsonhal {
	this := ServiceAccountRegistryJsonhal{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ServiceAccountRegistryJsonhal) GetLinks() AbstractEnvironmentJsonhalLinks {
	if o == nil || IsNil(o.Links) {
		var ret AbstractEnvironmentJsonhalLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountRegistryJsonhal) GetLinksOk() (*AbstractEnvironmentJsonhalLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AbstractEnvironmentJsonhalLinks and assigns it to the Links field.
func (o *ServiceAccountRegistryJsonhal) SetLinks(v AbstractEnvironmentJsonhalLinks) {
	o.Links = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceAccountRegistryJsonhal) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountRegistryJsonhal) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServiceAccountRegistryJsonhal) SetId(v int32) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ServiceAccountRegistryJsonhal) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountRegistryJsonhal) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ServiceAccountRegistryJsonhal) SetUuid(v string) {
	o.Uuid = &v
}

// GetQuota returns the Quota field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetQuota() int32 {
	if o == nil || IsNil(o.Quota.Get()) {
		var ret int32
		return ret
	}
	return *o.Quota.Get()
}

// GetQuotaOk returns a tuple with the Quota field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetQuotaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quota.Get(), o.Quota.IsSet()
}

// HasQuota returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasQuota() bool {
	if o != nil && o.Quota.IsSet() {
		return true
	}

	return false
}

// SetQuota gets a reference to the given NullableInt32 and assigns it to the Quota field.
func (o *ServiceAccountRegistryJsonhal) SetQuota(v int32) {
	o.Quota.Set(&v)
}

// SetQuotaNil sets the value for Quota to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetQuotaNil() {
	o.Quota.Set(nil)
}

// UnsetQuota ensures that no value is present for Quota, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetQuota() {
	o.Quota.Unset()
}

// GetInstance returns the Instance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetInstance() string {
	if o == nil || IsNil(o.Instance.Get()) {
		var ret string
		return ret
	}
	return *o.Instance.Get()
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instance.Get(), o.Instance.IsSet()
}

// HasInstance returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasInstance() bool {
	if o != nil && o.Instance.IsSet() {
		return true
	}

	return false
}

// SetInstance gets a reference to the given NullableString and assigns it to the Instance field.
func (o *ServiceAccountRegistryJsonhal) SetInstance(v string) {
	o.Instance.Set(&v)
}

// SetInstanceNil sets the value for Instance to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetInstanceNil() {
	o.Instance.Set(nil)
}

// UnsetInstance ensures that no value is present for Instance, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetInstance() {
	o.Instance.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ServiceAccountRegistryJsonhal) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetUrl() {
	o.Url.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *ServiceAccountRegistryJsonhal) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetEmail() {
	o.Email.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *ServiceAccountRegistryJsonhal) SetUsername(v string) {
	o.Username.Set(&v)
}

// SetUsernameNil sets the value for Username to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *ServiceAccountRegistryJsonhal) SetPassword(v string) {
	o.Password.Set(&v)
}

// SetPasswordNil sets the value for Password to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetPassword() {
	o.Password.Unset()
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetServiceAccount() string {
	if o == nil || IsNil(o.ServiceAccount.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceAccount.Get()
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetServiceAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceAccount.Get(), o.ServiceAccount.IsSet()
}

// HasServiceAccount returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasServiceAccount() bool {
	if o != nil && o.ServiceAccount.IsSet() {
		return true
	}

	return false
}

// SetServiceAccount gets a reference to the given NullableString and assigns it to the ServiceAccount field.
func (o *ServiceAccountRegistryJsonhal) SetServiceAccount(v string) {
	o.ServiceAccount.Set(&v)
}

// SetServiceAccountNil sets the value for ServiceAccount to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetServiceAccountNil() {
	o.ServiceAccount.Set(nil)
}

// UnsetServiceAccount ensures that no value is present for ServiceAccount, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetServiceAccount() {
	o.ServiceAccount.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *ServiceAccountRegistryJsonhal) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountRegistryJsonhal) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountRegistryJsonhal) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ServiceAccountRegistryJsonhal) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *ServiceAccountRegistryJsonhal) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}

// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *ServiceAccountRegistryJsonhal) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *ServiceAccountRegistryJsonhal) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

func (o ServiceAccountRegistryJsonhal) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceAccountRegistryJsonhal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	// skip: id is readOnly
	// skip: uuid is readOnly
	if o.Quota.IsSet() {
		toSerialize["quota"] = o.Quota.Get()
	}
	if o.Instance.IsSet() {
		toSerialize["instance"] = o.Instance.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.ServiceAccount.IsSet() {
		toSerialize["serviceAccount"] = o.ServiceAccount.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	return toSerialize, nil
}

type NullableServiceAccountRegistryJsonhal struct {
	value *ServiceAccountRegistryJsonhal
	isSet bool
}

func (v NullableServiceAccountRegistryJsonhal) Get() *ServiceAccountRegistryJsonhal {
	return v.value
}

func (v *NullableServiceAccountRegistryJsonhal) Set(val *ServiceAccountRegistryJsonhal) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountRegistryJsonhal) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountRegistryJsonhal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountRegistryJsonhal(val *ServiceAccountRegistryJsonhal) *NullableServiceAccountRegistryJsonhal {
	return &NullableServiceAccountRegistryJsonhal{value: val, isSet: true}
}

func (v NullableServiceAccountRegistryJsonhal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountRegistryJsonhal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
