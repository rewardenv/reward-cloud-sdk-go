/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
	"fmt"
)

// EnvironmentComponentEnvironment struct for EnvironmentComponentEnvironment
type EnvironmentComponentEnvironment struct {
	AbstractEnvironment *AbstractEnvironment
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *EnvironmentComponentEnvironment) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	// try to unmarshal JSON data into AbstractEnvironment
	err = json.Unmarshal(data, &dst.AbstractEnvironment);
	if err == nil {
		jsonAbstractEnvironment, _ := json.Marshal(dst.AbstractEnvironment)
		if string(jsonAbstractEnvironment) == "{}" { // empty struct
			dst.AbstractEnvironment = nil
		} else {
			return nil // data stored in dst.AbstractEnvironment, return on the first match
		}
	} else {
		dst.AbstractEnvironment = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(EnvironmentComponentEnvironment)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *EnvironmentComponentEnvironment) MarshalJSON() ([]byte, error) {
	if src.AbstractEnvironment != nil {
		return json.Marshal(&src.AbstractEnvironment)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableEnvironmentComponentEnvironment struct {
	value *EnvironmentComponentEnvironment
	isSet bool
}

func (v NullableEnvironmentComponentEnvironment) Get() *EnvironmentComponentEnvironment {
	return v.value
}

func (v *NullableEnvironmentComponentEnvironment) Set(val *EnvironmentComponentEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentComponentEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentComponentEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentComponentEnvironment(val *EnvironmentComponentEnvironment) *NullableEnvironmentComponentEnvironment {
	return &NullableEnvironmentComponentEnvironment{value: val, isSet: true}
}

func (v NullableEnvironmentComponentEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentComponentEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


