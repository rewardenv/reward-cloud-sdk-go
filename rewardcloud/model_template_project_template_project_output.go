/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
	"time"
)

// TemplateProjectTemplateProjectOutput Class ProjectTemplate
type TemplateProjectTemplateProjectOutput struct {
	Description           NullableString                       `json:"description,omitempty"`
	TemplateEnvironment   []string                             `json:"templateEnvironment,omitempty"`
	Id                    *int32                               `json:"id,omitempty"`
	Uuid                  *string                              `json:"uuid,omitempty"`
	Name                  NullableString                       `json:"name,omitempty"`
	IsActive              NullableBool                         `json:"isActive,omitempty"`
	Cpu                   NullableInt32                        `json:"cpu,omitempty"`
	Memory                NullableInt32                        `json:"memory,omitempty"`
	Storage               NullableInt32                        `json:"storage,omitempty"`
	Code                  NullableString                       `json:"code,omitempty"`
	Color                 NullableString                       `json:"color,omitempty"`
	IsInitProjectSkeleton NullableBool                         `json:"isInitProjectSkeleton,omitempty"`
	ComponentVersion      []string                             `json:"componentVersion,omitempty"`
	ProjectTypeVersion    NullableString                       `json:"projectTypeVersion,omitempty"`
	ProjectEnvVar         []ProjectEnvVarTemplateProjectOutput `json:"projectEnvVar,omitempty"`
	CreatedAt             *time.Time                           `json:"createdAt,omitempty"`
	UpdatedAt             *time.Time                           `json:"updatedAt,omitempty"`
}

// NewTemplateProjectTemplateProjectOutput instantiates a new TemplateProjectTemplateProjectOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateProjectTemplateProjectOutput() *TemplateProjectTemplateProjectOutput {
	this := TemplateProjectTemplateProjectOutput{}
	return &this
}

// NewTemplateProjectTemplateProjectOutputWithDefaults instantiates a new TemplateProjectTemplateProjectOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateProjectTemplateProjectOutputWithDefaults() *TemplateProjectTemplateProjectOutput {
	this := TemplateProjectTemplateProjectOutput{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetDescription() string {
	if o == nil || isNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TemplateProjectTemplateProjectOutput) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetDescription() {
	o.Description.Unset()
}

// GetTemplateEnvironment returns the TemplateEnvironment field value if set, zero value otherwise.
func (o *TemplateProjectTemplateProjectOutput) GetTemplateEnvironment() []string {
	if o == nil || isNil(o.TemplateEnvironment) {
		var ret []string
		return ret
	}
	return o.TemplateEnvironment
}

// GetTemplateEnvironmentOk returns a tuple with the TemplateEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateProjectTemplateProjectOutput) GetTemplateEnvironmentOk() ([]string, bool) {
	if o == nil || isNil(o.TemplateEnvironment) {
		return nil, false
	}
	return o.TemplateEnvironment, true
}

// HasTemplateEnvironment returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasTemplateEnvironment() bool {
	if o != nil && !isNil(o.TemplateEnvironment) {
		return true
	}

	return false
}

// SetTemplateEnvironment gets a reference to the given []string and assigns it to the TemplateEnvironment field.
func (o *TemplateProjectTemplateProjectOutput) SetTemplateEnvironment(v []string) {
	o.TemplateEnvironment = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TemplateProjectTemplateProjectOutput) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateProjectTemplateProjectOutput) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TemplateProjectTemplateProjectOutput) SetId(v int32) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *TemplateProjectTemplateProjectOutput) GetUuid() string {
	if o == nil || isNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateProjectTemplateProjectOutput) GetUuidOk() (*string, bool) {
	if o == nil || isNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *TemplateProjectTemplateProjectOutput) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TemplateProjectTemplateProjectOutput) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetName() {
	o.Name.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetIsActive() bool {
	if o == nil || isNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *TemplateProjectTemplateProjectOutput) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}

// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetCpu returns the Cpu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetCpu() int32 {
	if o == nil || isNil(o.Cpu.Get()) {
		var ret int32
		return ret
	}
	return *o.Cpu.Get()
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetCpuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cpu.Get(), o.Cpu.IsSet()
}

// HasCpu returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasCpu() bool {
	if o != nil && o.Cpu.IsSet() {
		return true
	}

	return false
}

// SetCpu gets a reference to the given NullableInt32 and assigns it to the Cpu field.
func (o *TemplateProjectTemplateProjectOutput) SetCpu(v int32) {
	o.Cpu.Set(&v)
}

// SetCpuNil sets the value for Cpu to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetCpuNil() {
	o.Cpu.Set(nil)
}

// UnsetCpu ensures that no value is present for Cpu, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetCpu() {
	o.Cpu.Unset()
}

// GetMemory returns the Memory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetMemory() int32 {
	if o == nil || isNil(o.Memory.Get()) {
		var ret int32
		return ret
	}
	return *o.Memory.Get()
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memory.Get(), o.Memory.IsSet()
}

// HasMemory returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasMemory() bool {
	if o != nil && o.Memory.IsSet() {
		return true
	}

	return false
}

// SetMemory gets a reference to the given NullableInt32 and assigns it to the Memory field.
func (o *TemplateProjectTemplateProjectOutput) SetMemory(v int32) {
	o.Memory.Set(&v)
}

// SetMemoryNil sets the value for Memory to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetMemoryNil() {
	o.Memory.Set(nil)
}

// UnsetMemory ensures that no value is present for Memory, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetMemory() {
	o.Memory.Unset()
}

// GetStorage returns the Storage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetStorage() int32 {
	if o == nil || isNil(o.Storage.Get()) {
		var ret int32
		return ret
	}
	return *o.Storage.Get()
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetStorageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage.Get(), o.Storage.IsSet()
}

// HasStorage returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasStorage() bool {
	if o != nil && o.Storage.IsSet() {
		return true
	}

	return false
}

// SetStorage gets a reference to the given NullableInt32 and assigns it to the Storage field.
func (o *TemplateProjectTemplateProjectOutput) SetStorage(v int32) {
	o.Storage.Set(&v)
}

// SetStorageNil sets the value for Storage to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetStorageNil() {
	o.Storage.Set(nil)
}

// UnsetStorage ensures that no value is present for Storage, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetStorage() {
	o.Storage.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetCode() string {
	if o == nil || isNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *TemplateProjectTemplateProjectOutput) SetCode(v string) {
	o.Code.Set(&v)
}

// SetCodeNil sets the value for Code to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetCode() {
	o.Code.Unset()
}

// GetColor returns the Color field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetColor() string {
	if o == nil || isNil(o.Color.Get()) {
		var ret string
		return ret
	}
	return *o.Color.Get()
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Color.Get(), o.Color.IsSet()
}

// HasColor returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasColor() bool {
	if o != nil && o.Color.IsSet() {
		return true
	}

	return false
}

// SetColor gets a reference to the given NullableString and assigns it to the Color field.
func (o *TemplateProjectTemplateProjectOutput) SetColor(v string) {
	o.Color.Set(&v)
}

// SetColorNil sets the value for Color to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetColorNil() {
	o.Color.Set(nil)
}

// UnsetColor ensures that no value is present for Color, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetColor() {
	o.Color.Unset()
}

// GetIsInitProjectSkeleton returns the IsInitProjectSkeleton field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetIsInitProjectSkeleton() bool {
	if o == nil || isNil(o.IsInitProjectSkeleton.Get()) {
		var ret bool
		return ret
	}
	return *o.IsInitProjectSkeleton.Get()
}

// GetIsInitProjectSkeletonOk returns a tuple with the IsInitProjectSkeleton field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetIsInitProjectSkeletonOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsInitProjectSkeleton.Get(), o.IsInitProjectSkeleton.IsSet()
}

// HasIsInitProjectSkeleton returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasIsInitProjectSkeleton() bool {
	if o != nil && o.IsInitProjectSkeleton.IsSet() {
		return true
	}

	return false
}

// SetIsInitProjectSkeleton gets a reference to the given NullableBool and assigns it to the IsInitProjectSkeleton field.
func (o *TemplateProjectTemplateProjectOutput) SetIsInitProjectSkeleton(v bool) {
	o.IsInitProjectSkeleton.Set(&v)
}

// SetIsInitProjectSkeletonNil sets the value for IsInitProjectSkeleton to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetIsInitProjectSkeletonNil() {
	o.IsInitProjectSkeleton.Set(nil)
}

// UnsetIsInitProjectSkeleton ensures that no value is present for IsInitProjectSkeleton, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetIsInitProjectSkeleton() {
	o.IsInitProjectSkeleton.Unset()
}

// GetComponentVersion returns the ComponentVersion field value if set, zero value otherwise.
func (o *TemplateProjectTemplateProjectOutput) GetComponentVersion() []string {
	if o == nil || isNil(o.ComponentVersion) {
		var ret []string
		return ret
	}
	return o.ComponentVersion
}

// GetComponentVersionOk returns a tuple with the ComponentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateProjectTemplateProjectOutput) GetComponentVersionOk() ([]string, bool) {
	if o == nil || isNil(o.ComponentVersion) {
		return nil, false
	}
	return o.ComponentVersion, true
}

// HasComponentVersion returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasComponentVersion() bool {
	if o != nil && !isNil(o.ComponentVersion) {
		return true
	}

	return false
}

// SetComponentVersion gets a reference to the given []string and assigns it to the ComponentVersion field.
func (o *TemplateProjectTemplateProjectOutput) SetComponentVersion(v []string) {
	o.ComponentVersion = v
}

// GetProjectTypeVersion returns the ProjectTypeVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateProjectTemplateProjectOutput) GetProjectTypeVersion() string {
	if o == nil || isNil(o.ProjectTypeVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectTypeVersion.Get()
}

// GetProjectTypeVersionOk returns a tuple with the ProjectTypeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProjectTemplateProjectOutput) GetProjectTypeVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectTypeVersion.Get(), o.ProjectTypeVersion.IsSet()
}

// HasProjectTypeVersion returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasProjectTypeVersion() bool {
	if o != nil && o.ProjectTypeVersion.IsSet() {
		return true
	}

	return false
}

// SetProjectTypeVersion gets a reference to the given NullableString and assigns it to the ProjectTypeVersion field.
func (o *TemplateProjectTemplateProjectOutput) SetProjectTypeVersion(v string) {
	o.ProjectTypeVersion.Set(&v)
}

// SetProjectTypeVersionNil sets the value for ProjectTypeVersion to be an explicit nil
func (o *TemplateProjectTemplateProjectOutput) SetProjectTypeVersionNil() {
	o.ProjectTypeVersion.Set(nil)
}

// UnsetProjectTypeVersion ensures that no value is present for ProjectTypeVersion, not even an explicit nil
func (o *TemplateProjectTemplateProjectOutput) UnsetProjectTypeVersion() {
	o.ProjectTypeVersion.Unset()
}

// GetProjectEnvVar returns the ProjectEnvVar field value if set, zero value otherwise.
func (o *TemplateProjectTemplateProjectOutput) GetProjectEnvVar() []ProjectEnvVarTemplateProjectOutput {
	if o == nil || isNil(o.ProjectEnvVar) {
		var ret []ProjectEnvVarTemplateProjectOutput
		return ret
	}
	return o.ProjectEnvVar
}

// GetProjectEnvVarOk returns a tuple with the ProjectEnvVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateProjectTemplateProjectOutput) GetProjectEnvVarOk() ([]ProjectEnvVarTemplateProjectOutput, bool) {
	if o == nil || isNil(o.ProjectEnvVar) {
		return nil, false
	}
	return o.ProjectEnvVar, true
}

// HasProjectEnvVar returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasProjectEnvVar() bool {
	if o != nil && !isNil(o.ProjectEnvVar) {
		return true
	}

	return false
}

// SetProjectEnvVar gets a reference to the given []ProjectEnvVarTemplateProjectOutput and assigns it to the ProjectEnvVar field.
func (o *TemplateProjectTemplateProjectOutput) SetProjectEnvVar(v []ProjectEnvVarTemplateProjectOutput) {
	o.ProjectEnvVar = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TemplateProjectTemplateProjectOutput) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateProjectTemplateProjectOutput) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *TemplateProjectTemplateProjectOutput) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TemplateProjectTemplateProjectOutput) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateProjectTemplateProjectOutput) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TemplateProjectTemplateProjectOutput) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *TemplateProjectTemplateProjectOutput) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o TemplateProjectTemplateProjectOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !isNil(o.TemplateEnvironment) {
		toSerialize["templateEnvironment"] = o.TemplateEnvironment
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.Cpu.IsSet() {
		toSerialize["cpu"] = o.Cpu.Get()
	}
	if o.Memory.IsSet() {
		toSerialize["memory"] = o.Memory.Get()
	}
	if o.Storage.IsSet() {
		toSerialize["storage"] = o.Storage.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Color.IsSet() {
		toSerialize["color"] = o.Color.Get()
	}
	if o.IsInitProjectSkeleton.IsSet() {
		toSerialize["isInitProjectSkeleton"] = o.IsInitProjectSkeleton.Get()
	}
	if !isNil(o.ComponentVersion) {
		toSerialize["componentVersion"] = o.ComponentVersion
	}
	if o.ProjectTypeVersion.IsSet() {
		toSerialize["projectTypeVersion"] = o.ProjectTypeVersion.Get()
	}
	if !isNil(o.ProjectEnvVar) {
		toSerialize["projectEnvVar"] = o.ProjectEnvVar
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateProjectTemplateProjectOutput struct {
	value *TemplateProjectTemplateProjectOutput
	isSet bool
}

func (v NullableTemplateProjectTemplateProjectOutput) Get() *TemplateProjectTemplateProjectOutput {
	return v.value
}

func (v *NullableTemplateProjectTemplateProjectOutput) Set(val *TemplateProjectTemplateProjectOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateProjectTemplateProjectOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateProjectTemplateProjectOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateProjectTemplateProjectOutput(val *TemplateProjectTemplateProjectOutput) *NullableTemplateProjectTemplateProjectOutput {
	return &NullableTemplateProjectTemplateProjectOutput{value: val, isSet: true}
}

func (v NullableTemplateProjectTemplateProjectOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateProjectTemplateProjectOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
