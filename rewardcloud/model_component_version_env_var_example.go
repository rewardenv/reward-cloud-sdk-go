/*
Reward Cloud

It is an API for Reward Cloud project in ITG Commerce

API version: v0.6.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rewardcloud

import (
	"encoding/json"
	"time"
)

// ComponentVersionEnvVarExample Class ComponentVersionEnvVarExample
type ComponentVersionEnvVarExample struct {
	Id                     *int32         `json:"id,omitempty"`
	Uuid                   NullableString `json:"uuid,omitempty"`
	Value                  NullableString `json:"value,omitempty"`
	IsDefault              NullableBool   `json:"isDefault,omitempty"`
	ComponentVersionEnvVar NullableString `json:"componentVersionEnvVar,omitempty"`
	CreatedBy              NullableString `json:"createdBy,omitempty"`
	UpdatedBy              NullableString `json:"updatedBy,omitempty"`
	CreatedAt              *time.Time     `json:"createdAt,omitempty"`
	UpdatedAt              *time.Time     `json:"updatedAt,omitempty"`
}

// NewComponentVersionEnvVarExample instantiates a new ComponentVersionEnvVarExample object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentVersionEnvVarExample() *ComponentVersionEnvVarExample {
	this := ComponentVersionEnvVarExample{}
	return &this
}

// NewComponentVersionEnvVarExampleWithDefaults instantiates a new ComponentVersionEnvVarExample object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentVersionEnvVarExampleWithDefaults() *ComponentVersionEnvVarExample {
	this := ComponentVersionEnvVarExample{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ComponentVersionEnvVarExample) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentVersionEnvVarExample) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ComponentVersionEnvVarExample) SetId(v int32) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComponentVersionEnvVarExample) GetUuid() string {
	if o == nil || isNil(o.Uuid.Get()) {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComponentVersionEnvVarExample) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *ComponentVersionEnvVarExample) SetUuid(v string) {
	o.Uuid.Set(&v)
}

// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *ComponentVersionEnvVarExample) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *ComponentVersionEnvVarExample) UnsetUuid() {
	o.Uuid.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComponentVersionEnvVarExample) GetValue() string {
	if o == nil || isNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComponentVersionEnvVarExample) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *ComponentVersionEnvVarExample) SetValue(v string) {
	o.Value.Set(&v)
}

// SetValueNil sets the value for Value to be an explicit nil
func (o *ComponentVersionEnvVarExample) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ComponentVersionEnvVarExample) UnsetValue() {
	o.Value.Unset()
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComponentVersionEnvVarExample) GetIsDefault() bool {
	if o == nil || isNil(o.IsDefault.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDefault.Get()
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComponentVersionEnvVarExample) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDefault.Get(), o.IsDefault.IsSet()
}

// HasIsDefault returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasIsDefault() bool {
	if o != nil && o.IsDefault.IsSet() {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given NullableBool and assigns it to the IsDefault field.
func (o *ComponentVersionEnvVarExample) SetIsDefault(v bool) {
	o.IsDefault.Set(&v)
}

// SetIsDefaultNil sets the value for IsDefault to be an explicit nil
func (o *ComponentVersionEnvVarExample) SetIsDefaultNil() {
	o.IsDefault.Set(nil)
}

// UnsetIsDefault ensures that no value is present for IsDefault, not even an explicit nil
func (o *ComponentVersionEnvVarExample) UnsetIsDefault() {
	o.IsDefault.Unset()
}

// GetComponentVersionEnvVar returns the ComponentVersionEnvVar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComponentVersionEnvVarExample) GetComponentVersionEnvVar() string {
	if o == nil || isNil(o.ComponentVersionEnvVar.Get()) {
		var ret string
		return ret
	}
	return *o.ComponentVersionEnvVar.Get()
}

// GetComponentVersionEnvVarOk returns a tuple with the ComponentVersionEnvVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComponentVersionEnvVarExample) GetComponentVersionEnvVarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComponentVersionEnvVar.Get(), o.ComponentVersionEnvVar.IsSet()
}

// HasComponentVersionEnvVar returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasComponentVersionEnvVar() bool {
	if o != nil && o.ComponentVersionEnvVar.IsSet() {
		return true
	}

	return false
}

// SetComponentVersionEnvVar gets a reference to the given NullableString and assigns it to the ComponentVersionEnvVar field.
func (o *ComponentVersionEnvVarExample) SetComponentVersionEnvVar(v string) {
	o.ComponentVersionEnvVar.Set(&v)
}

// SetComponentVersionEnvVarNil sets the value for ComponentVersionEnvVar to be an explicit nil
func (o *ComponentVersionEnvVarExample) SetComponentVersionEnvVarNil() {
	o.ComponentVersionEnvVar.Set(nil)
}

// UnsetComponentVersionEnvVar ensures that no value is present for ComponentVersionEnvVar, not even an explicit nil
func (o *ComponentVersionEnvVarExample) UnsetComponentVersionEnvVar() {
	o.ComponentVersionEnvVar.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComponentVersionEnvVarExample) GetCreatedBy() string {
	if o == nil || isNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComponentVersionEnvVarExample) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *ComponentVersionEnvVarExample) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *ComponentVersionEnvVarExample) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *ComponentVersionEnvVarExample) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComponentVersionEnvVarExample) GetUpdatedBy() string {
	if o == nil || isNil(o.UpdatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComponentVersionEnvVarExample) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *ComponentVersionEnvVarExample) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}

// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *ComponentVersionEnvVarExample) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *ComponentVersionEnvVarExample) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ComponentVersionEnvVarExample) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentVersionEnvVarExample) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ComponentVersionEnvVarExample) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ComponentVersionEnvVarExample) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentVersionEnvVarExample) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ComponentVersionEnvVarExample) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ComponentVersionEnvVarExample) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ComponentVersionEnvVarExample) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.IsDefault.IsSet() {
		toSerialize["isDefault"] = o.IsDefault.Get()
	}
	if o.ComponentVersionEnvVar.IsSet() {
		toSerialize["componentVersionEnvVar"] = o.ComponentVersionEnvVar.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableComponentVersionEnvVarExample struct {
	value *ComponentVersionEnvVarExample
	isSet bool
}

func (v NullableComponentVersionEnvVarExample) Get() *ComponentVersionEnvVarExample {
	return v.value
}

func (v *NullableComponentVersionEnvVarExample) Set(val *ComponentVersionEnvVarExample) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentVersionEnvVarExample) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentVersionEnvVarExample) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentVersionEnvVarExample(val *ComponentVersionEnvVarExample) *NullableComponentVersionEnvVarExample {
	return &NullableComponentVersionEnvVarExample{value: val, isSet: true}
}

func (v NullableComponentVersionEnvVarExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentVersionEnvVarExample) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
