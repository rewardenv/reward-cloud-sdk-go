openapi: 3.0.0
info:
  title: 'Reward Cloud'
  description: 'It is an API for Reward Cloud project in ITG Commerce'
  version: v0.6.0-alpha
servers:
  -
    url: /
    description: ''
paths:
  /api/component_resource_limits:
    get:
      operationId: api_component_resource_limits_get_collection
      tags:
        - ComponentResourceLimit
      responses:
        200:
          description: 'ComponentResourceLimit collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentResourceLimit'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ComponentResourceLimit.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentResourceLimit'
      summary: 'Retrieves the collection of ComponentResourceLimit resources.'
      description: 'Retrieves the collection of ComponentResourceLimit resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: projectTypeVersion
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'projectTypeVersion[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resourceType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: componentVersion
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'componentVersion[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_component_resource_limits_post
      tags:
        - ComponentResourceLimit
      responses:
        201:
          description: 'ComponentResourceLimit resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ComponentResourceLimit resource.'
      description: 'Creates a ComponentResourceLimit resource.'
      parameters: []
      requestBody:
        description: 'The new ComponentResourceLimit resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit'
        required: true
      deprecated: false
    parameters: []
  '/api/component_resource_limits/{id}':
    get:
      operationId: api_component_resource_limits_id_get
      tags:
        - ComponentResourceLimit
      responses:
        200:
          description: 'ComponentResourceLimit resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ComponentResourceLimit resource.'
      description: 'Retrieves a ComponentResourceLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentResourceLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_component_resource_limits_id_put
      tags:
        - ComponentResourceLimit
      responses:
        200:
          description: 'ComponentResourceLimit resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ComponentResourceLimit resource.'
      description: 'Replaces the ComponentResourceLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentResourceLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentResourceLimit resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit'
        required: true
      deprecated: false
    delete:
      operationId: api_component_resource_limits_id_delete
      tags:
        - ComponentResourceLimit
      responses:
        204:
          description: 'ComponentResourceLimit resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ComponentResourceLimit resource.'
      description: 'Removes the ComponentResourceLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentResourceLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_component_resource_limits_id_patch
      tags:
        - ComponentResourceLimit
      responses:
        200:
          description: 'ComponentResourceLimit resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentResourceLimit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ComponentResourceLimit resource.'
      description: 'Updates the ComponentResourceLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentResourceLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentResourceLimit resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentResourceLimit'
        required: true
      deprecated: false
    parameters: []
  /api/component_version_env_var_examples:
    get:
      operationId: api_component_version_env_var_examples_get_collection
      tags:
        - ComponentVersionEnvVarExample
      responses:
        200:
          description: 'ComponentVersionEnvVarExample collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentVersionEnvVarExample'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentVersionEnvVarExample'
      summary: 'Retrieves the collection of ComponentVersionEnvVarExample resources.'
      description: 'Retrieves the collection of ComponentVersionEnvVarExample resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_component_version_env_var_examples_post
      tags:
        - ComponentVersionEnvVarExample
      responses:
        201:
          description: 'ComponentVersionEnvVarExample resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ComponentVersionEnvVarExample resource.'
      description: 'Creates a ComponentVersionEnvVarExample resource.'
      parameters: []
      requestBody:
        description: 'The new ComponentVersionEnvVarExample resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample'
        required: true
      deprecated: false
    parameters: []
  '/api/component_version_env_var_examples/{id}':
    get:
      operationId: api_component_version_env_var_examples_id_get
      tags:
        - ComponentVersionEnvVarExample
      responses:
        200:
          description: 'ComponentVersionEnvVarExample resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ComponentVersionEnvVarExample resource.'
      description: 'Retrieves a ComponentVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_component_version_env_var_examples_id_put
      tags:
        - ComponentVersionEnvVarExample
      responses:
        200:
          description: 'ComponentVersionEnvVarExample resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ComponentVersionEnvVarExample resource.'
      description: 'Replaces the ComponentVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentVersionEnvVarExample resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample'
        required: true
      deprecated: false
    delete:
      operationId: api_component_version_env_var_examples_id_delete
      tags:
        - ComponentVersionEnvVarExample
      responses:
        204:
          description: 'ComponentVersionEnvVarExample resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ComponentVersionEnvVarExample resource.'
      description: 'Removes the ComponentVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_component_version_env_var_examples_id_patch
      tags:
        - ComponentVersionEnvVarExample
      responses:
        200:
          description: 'ComponentVersionEnvVarExample resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVarExample'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ComponentVersionEnvVarExample resource.'
      description: 'Updates the ComponentVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentVersionEnvVarExample resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVarExample'
        required: true
      deprecated: false
    parameters: []
  /api/component_version_env_vars:
    get:
      operationId: api_component_version_env_vars_get_collection
      tags:
        - ComponentVersionEnvVar
      responses:
        200:
          description: 'ComponentVersionEnvVar collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentVersionEnvVar'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentVersionEnvVar'
      summary: 'Retrieves the collection of ComponentVersionEnvVar resources.'
      description: 'Retrieves the collection of ComponentVersionEnvVar resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: componentVersion
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'componentVersion[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: envVarType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'envVarType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_component_version_env_vars_post
      tags:
        - ComponentVersionEnvVar
      responses:
        201:
          description: 'ComponentVersionEnvVar resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ComponentVersionEnvVar resource.'
      description: 'Creates a ComponentVersionEnvVar resource.'
      parameters: []
      requestBody:
        description: 'The new ComponentVersionEnvVar resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar'
        required: true
      deprecated: false
    parameters: []
  '/api/component_version_env_vars/{id}':
    get:
      operationId: api_component_version_env_vars_id_get
      tags:
        - ComponentVersionEnvVar
      responses:
        200:
          description: 'ComponentVersionEnvVar resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ComponentVersionEnvVar resource.'
      description: 'Retrieves a ComponentVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_component_version_env_vars_id_put
      tags:
        - ComponentVersionEnvVar
      responses:
        200:
          description: 'ComponentVersionEnvVar resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ComponentVersionEnvVar resource.'
      description: 'Replaces the ComponentVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentVersionEnvVar resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar'
        required: true
      deprecated: false
    delete:
      operationId: api_component_version_env_vars_id_delete
      tags:
        - ComponentVersionEnvVar
      responses:
        204:
          description: 'ComponentVersionEnvVar resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ComponentVersionEnvVar resource.'
      description: 'Removes the ComponentVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_component_version_env_vars_id_patch
      tags:
        - ComponentVersionEnvVar
      responses:
        200:
          description: 'ComponentVersionEnvVar resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersionEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ComponentVersionEnvVar resource.'
      description: 'Updates the ComponentVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentVersionEnvVar resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersionEnvVar'
        required: true
      deprecated: false
    parameters: []
  /api/component_versions:
    get:
      operationId: api_component_versions_get_collection
      tags:
        - ComponentVersion
      responses:
        200:
          description: 'ComponentVersion collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentVersion'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ComponentVersion.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentVersion'
      summary: 'Retrieves the collection of ComponentVersion resources.'
      description: 'Retrieves the collection of ComponentVersion resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: component
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'component[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_component_versions_post
      tags:
        - ComponentVersion
      responses:
        201:
          description: 'ComponentVersion resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ComponentVersion resource.'
      description: 'Creates a ComponentVersion resource.'
      parameters: []
      requestBody:
        description: 'The new ComponentVersion resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersion'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersion.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersion'
        required: true
      deprecated: false
    parameters: []
  '/api/component_versions/{id}':
    get:
      operationId: api_component_versions_id_get
      tags:
        - ComponentVersion
      responses:
        200:
          description: 'ComponentVersion resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ComponentVersion resource.'
      description: 'Retrieves a ComponentVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_component_versions_id_put
      tags:
        - ComponentVersion
      responses:
        200:
          description: 'ComponentVersion resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ComponentVersion resource.'
      description: 'Replaces the ComponentVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentVersion resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersion'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersion.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersion'
        required: true
      deprecated: false
    delete:
      operationId: api_component_versions_id_delete
      tags:
        - ComponentVersion
      responses:
        204:
          description: 'ComponentVersion resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ComponentVersion resource.'
      description: 'Removes the ComponentVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_component_versions_id_patch
      tags:
        - ComponentVersion
      responses:
        200:
          description: 'ComponentVersion resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ComponentVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ComponentVersion resource.'
      description: 'Updates the ComponentVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ComponentVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ComponentVersion resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersion'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ComponentVersion.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ComponentVersion'
        required: true
      deprecated: false
    parameters: []
  /api/components:
    get:
      operationId: api_components_get_collection
      tags:
        - Component
      responses:
        200:
          description: 'Component collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Component.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'
      summary: 'Retrieves the collection of Component resources.'
      description: 'Retrieves the collection of Component resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_components_post
      tags:
        - Component
      responses:
        201:
          description: 'Component resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Component'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Component resource.'
      description: 'Creates a Component resource.'
      parameters: []
      requestBody:
        description: 'The new Component resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Component'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Component.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Component'
        required: true
      deprecated: false
    parameters: []
  '/api/components/{id}':
    get:
      operationId: api_components_id_get
      tags:
        - Component
      responses:
        200:
          description: 'Component resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Component'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Component resource.'
      description: 'Retrieves a Component resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Component identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_components_id_put
      tags:
        - Component
      responses:
        200:
          description: 'Component resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Component'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Component resource.'
      description: 'Replaces the Component resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Component identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Component resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Component'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Component.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Component'
        required: true
      deprecated: false
    delete:
      operationId: api_components_id_delete
      tags:
        - Component
      responses:
        204:
          description: 'Component resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Component resource.'
      description: 'Removes the Component resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Component identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_components_id_patch
      tags:
        - Component
      responses:
        200:
          description: 'Component resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Component'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Component resource.'
      description: 'Updates the Component resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Component identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Component resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Component'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Component.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Component'
        required: true
      deprecated: false
    parameters: []
  /api/credential_types:
    get:
      operationId: api_credential_types_get_collection
      tags:
        - CredentialType
      responses:
        200:
          description: 'CredentialType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialType'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/CredentialType.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialType'
      summary: 'Retrieves the collection of CredentialType resources.'
      description: 'Retrieves the collection of CredentialType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_credential_types_post
      tags:
        - CredentialType
      responses:
        201:
          description: 'CredentialType resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CredentialType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/CredentialType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a CredentialType resource.'
      description: 'Creates a CredentialType resource.'
      parameters: []
      requestBody:
        description: 'The new CredentialType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CredentialType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/CredentialType'
        required: true
      deprecated: false
    parameters: []
  '/api/credential_types/{id}':
    get:
      operationId: api_credential_types_id_get
      tags:
        - CredentialType
      responses:
        200:
          description: 'CredentialType resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CredentialType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/CredentialType'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a CredentialType resource.'
      description: 'Retrieves a CredentialType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'CredentialType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_credential_types_id_put
      tags:
        - CredentialType
      responses:
        200:
          description: 'CredentialType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CredentialType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/CredentialType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the CredentialType resource.'
      description: 'Replaces the CredentialType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'CredentialType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated CredentialType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CredentialType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/CredentialType'
        required: true
      deprecated: false
    delete:
      operationId: api_credential_types_id_delete
      tags:
        - CredentialType
      responses:
        204:
          description: 'CredentialType resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the CredentialType resource.'
      description: 'Removes the CredentialType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'CredentialType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_credential_types_id_patch
      tags:
        - CredentialType
      responses:
        200:
          description: 'CredentialType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CredentialType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/CredentialType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the CredentialType resource.'
      description: 'Updates the CredentialType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'CredentialType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated CredentialType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CredentialType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/CredentialType'
        required: true
      deprecated: false
    parameters: []
  /api/data_transfer_data_types:
    get:
      operationId: api_data_transfer_data_types_get_collection
      tags:
        - DataTransferDataType
      responses:
        200:
          description: 'DataTransferDataType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataTransferDataType'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/DataTransferDataType.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataTransferDataType'
      summary: 'Retrieves the collection of DataTransferDataType resources.'
      description: 'Retrieves the collection of DataTransferDataType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_data_transfer_data_types_post
      tags:
        - DataTransferDataType
      responses:
        201:
          description: 'DataTransferDataType resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a DataTransferDataType resource.'
      description: 'Creates a DataTransferDataType resource.'
      parameters: []
      requestBody:
        description: 'The new DataTransferDataType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransferDataType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DataTransferDataType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/DataTransferDataType'
        required: true
      deprecated: false
    parameters: []
  '/api/data_transfer_data_types/{id}':
    get:
      operationId: api_data_transfer_data_types_id_get
      tags:
        - DataTransferDataType
      responses:
        200:
          description: 'DataTransferDataType resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a DataTransferDataType resource.'
      description: 'Retrieves a DataTransferDataType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferDataType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_data_transfer_data_types_id_put
      tags:
        - DataTransferDataType
      responses:
        200:
          description: 'DataTransferDataType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the DataTransferDataType resource.'
      description: 'Replaces the DataTransferDataType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferDataType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated DataTransferDataType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransferDataType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DataTransferDataType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/DataTransferDataType'
        required: true
      deprecated: false
    delete:
      operationId: api_data_transfer_data_types_id_delete
      tags:
        - DataTransferDataType
      responses:
        204:
          description: 'DataTransferDataType resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the DataTransferDataType resource.'
      description: 'Removes the DataTransferDataType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferDataType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_data_transfer_data_types_id_patch
      tags:
        - DataTransferDataType
      responses:
        200:
          description: 'DataTransferDataType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferDataType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferDataType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the DataTransferDataType resource.'
      description: 'Updates the DataTransferDataType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferDataType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated DataTransferDataType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransferDataType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DataTransferDataType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/DataTransferDataType'
        required: true
      deprecated: false
    parameters: []
  /api/data_transfer_types:
    get:
      operationId: api_data_transfer_types_get_collection
      tags:
        - DataTransferType
      responses:
        200:
          description: 'DataTransferType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataTransferType'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/DataTransferType.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataTransferType'
      summary: 'Retrieves the collection of DataTransferType resources.'
      description: 'Retrieves the collection of DataTransferType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_data_transfer_types_post
      tags:
        - DataTransferType
      responses:
        201:
          description: 'DataTransferType resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a DataTransferType resource.'
      description: 'Creates a DataTransferType resource.'
      parameters: []
      requestBody:
        description: 'The new DataTransferType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransferType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DataTransferType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/DataTransferType'
        required: true
      deprecated: false
    parameters: []
  '/api/data_transfer_types/{id}':
    get:
      operationId: api_data_transfer_types_id_get
      tags:
        - DataTransferType
      responses:
        200:
          description: 'DataTransferType resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferType'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a DataTransferType resource.'
      description: 'Retrieves a DataTransferType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_data_transfer_types_id_put
      tags:
        - DataTransferType
      responses:
        200:
          description: 'DataTransferType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the DataTransferType resource.'
      description: 'Replaces the DataTransferType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated DataTransferType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransferType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DataTransferType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/DataTransferType'
        required: true
      deprecated: false
    delete:
      operationId: api_data_transfer_types_id_delete
      tags:
        - DataTransferType
      responses:
        204:
          description: 'DataTransferType resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the DataTransferType resource.'
      description: 'Removes the DataTransferType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_data_transfer_types_id_patch
      tags:
        - DataTransferType
      responses:
        200:
          description: 'DataTransferType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DataTransferType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/DataTransferType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the DataTransferType resource.'
      description: 'Updates the DataTransferType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DataTransferType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated DataTransferType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransferType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DataTransferType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/DataTransferType'
        required: true
      deprecated: false
    parameters: []
  /api/env_var_types:
    get:
      operationId: api_env_var_types_get_collection
      tags:
        - EnvVarType
      responses:
        200:
          description: 'EnvVarType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvVarType'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvVarType.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvVarType'
      summary: 'Retrieves the collection of EnvVarType resources.'
      description: 'Retrieves the collection of EnvVarType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_env_var_types_post
      tags:
        - EnvVarType
      responses:
        201:
          description: 'EnvVarType resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvVarType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvVarType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvVarType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvVarType resource.'
      description: 'Creates a EnvVarType resource.'
      parameters: []
      requestBody:
        description: 'The new EnvVarType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvVarType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvVarType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvVarType'
        required: true
      deprecated: false
    parameters: []
  '/api/env_var_types/{id}':
    get:
      operationId: api_env_var_types_id_get
      tags:
        - EnvVarType
      responses:
        200:
          description: 'EnvVarType resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvVarType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvVarType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvVarType'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvVarType resource.'
      description: 'Retrieves a EnvVarType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvVarType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_env_var_types_id_put
      tags:
        - EnvVarType
      responses:
        200:
          description: 'EnvVarType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvVarType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvVarType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvVarType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvVarType resource.'
      description: 'Replaces the EnvVarType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvVarType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvVarType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvVarType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvVarType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvVarType'
        required: true
      deprecated: false
    delete:
      operationId: api_env_var_types_id_delete
      tags:
        - EnvVarType
      responses:
        204:
          description: 'EnvVarType resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvVarType resource.'
      description: 'Removes the EnvVarType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvVarType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_env_var_types_id_patch
      tags:
        - EnvVarType
      responses:
        200:
          description: 'EnvVarType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvVarType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvVarType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvVarType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvVarType resource.'
      description: 'Updates the EnvVarType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvVarType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvVarType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvVarType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvVarType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvVarType'
        required: true
      deprecated: false
    parameters: []
  /api/environment_access_backends:
    get:
      operationId: api_environment_access_backends_get_collection
      tags:
        - EnvironmentAccessBackend
      responses:
        200:
          description: 'EnvironmentAccessBackend collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessBackend'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessBackend'
      summary: 'Retrieves the collection of EnvironmentAccessBackend resources.'
      description: 'Retrieves the collection of EnvironmentAccessBackend resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_access_backends_post
      tags:
        - EnvironmentAccessBackend
      responses:
        201:
          description: 'EnvironmentAccessBackend resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentAccessBackend resource.'
      description: 'Creates a EnvironmentAccessBackend resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentAccessBackend resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_access_backends/{id}':
    get:
      operationId: api_environment_access_backends_id_get
      tags:
        - EnvironmentAccessBackend
      responses:
        200:
          description: 'EnvironmentAccessBackend resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccessBackend resource.'
      description: 'Retrieves a EnvironmentAccessBackend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessBackend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_access_backends_id_put
      tags:
        - EnvironmentAccessBackend
      responses:
        200:
          description: 'EnvironmentAccessBackend resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentAccessBackend resource.'
      description: 'Replaces the EnvironmentAccessBackend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessBackend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessBackend resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_access_backends_id_delete
      tags:
        - EnvironmentAccessBackend
      responses:
        204:
          description: 'EnvironmentAccessBackend resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentAccessBackend resource.'
      description: 'Removes the EnvironmentAccessBackend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessBackend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_access_backends_id_patch
      tags:
        - EnvironmentAccessBackend
      responses:
        200:
          description: 'EnvironmentAccessBackend resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessBackend'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentAccessBackend resource.'
      description: 'Updates the EnvironmentAccessBackend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessBackend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessBackend resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessBackend'
        required: true
      deprecated: false
    parameters: []
  /api/environment_access_databases:
    get:
      operationId: api_environment_access_databases_get_collection
      tags:
        - EnvironmentAccessDatabase
      responses:
        200:
          description: 'EnvironmentAccessDatabase collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessDatabase'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessDatabase'
      summary: 'Retrieves the collection of EnvironmentAccessDatabase resources.'
      description: 'Retrieves the collection of EnvironmentAccessDatabase resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_access_databases_post
      tags:
        - EnvironmentAccessDatabase
      responses:
        201:
          description: 'EnvironmentAccessDatabase resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentAccessDatabase resource.'
      description: 'Creates a EnvironmentAccessDatabase resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentAccessDatabase resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_access_databases/{id}':
    get:
      operationId: api_environment_access_databases_id_get
      tags:
        - EnvironmentAccessDatabase
      responses:
        200:
          description: 'EnvironmentAccessDatabase resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccessDatabase resource.'
      description: 'Retrieves a EnvironmentAccessDatabase resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDatabase identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_access_databases_id_put
      tags:
        - EnvironmentAccessDatabase
      responses:
        200:
          description: 'EnvironmentAccessDatabase resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentAccessDatabase resource.'
      description: 'Replaces the EnvironmentAccessDatabase resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDatabase identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessDatabase resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_access_databases_id_delete
      tags:
        - EnvironmentAccessDatabase
      responses:
        204:
          description: 'EnvironmentAccessDatabase resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentAccessDatabase resource.'
      description: 'Removes the EnvironmentAccessDatabase resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDatabase identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_access_databases_id_patch
      tags:
        - EnvironmentAccessDatabase
      responses:
        200:
          description: 'EnvironmentAccessDatabase resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDatabase'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentAccessDatabase resource.'
      description: 'Updates the EnvironmentAccessDatabase resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDatabase identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessDatabase resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDatabase'
        required: true
      deprecated: false
    parameters: []
  /api/environment_access_dev_tools:
    get:
      operationId: api_environment_access_dev_tools_get_collection
      tags:
        - EnvironmentAccessDevTools
      responses:
        200:
          description: 'EnvironmentAccessDevTools collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessDevTools'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessDevTools'
      summary: 'Retrieves the collection of EnvironmentAccessDevTools resources.'
      description: 'Retrieves the collection of EnvironmentAccessDevTools resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_access_dev_tools_post
      tags:
        - EnvironmentAccessDevTools
      responses:
        201:
          description: 'EnvironmentAccessDevTools resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentAccessDevTools resource.'
      description: 'Creates a EnvironmentAccessDevTools resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentAccessDevTools resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_access_dev_tools/{id}':
    get:
      operationId: api_environment_access_dev_tools_id_get
      tags:
        - EnvironmentAccessDevTools
      responses:
        200:
          description: 'EnvironmentAccessDevTools resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccessDevTools resource.'
      description: 'Retrieves a EnvironmentAccessDevTools resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDevTools identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_access_dev_tools_id_put
      tags:
        - EnvironmentAccessDevTools
      responses:
        200:
          description: 'EnvironmentAccessDevTools resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentAccessDevTools resource.'
      description: 'Replaces the EnvironmentAccessDevTools resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDevTools identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessDevTools resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_access_dev_tools_id_delete
      tags:
        - EnvironmentAccessDevTools
      responses:
        204:
          description: 'EnvironmentAccessDevTools resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentAccessDevTools resource.'
      description: 'Removes the EnvironmentAccessDevTools resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDevTools identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_access_dev_tools_id_patch
      tags:
        - EnvironmentAccessDevTools
      responses:
        200:
          description: 'EnvironmentAccessDevTools resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessDevTools'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentAccessDevTools resource.'
      description: 'Updates the EnvironmentAccessDevTools resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessDevTools identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessDevTools resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessDevTools'
        required: true
      deprecated: false
    parameters: []
  /api/environment_access_frontends:
    get:
      operationId: api_environment_access_frontends_get_collection
      tags:
        - EnvironmentAccessFrontend
      responses:
        200:
          description: 'EnvironmentAccessFrontend collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessFrontend'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessFrontend'
      summary: 'Retrieves the collection of EnvironmentAccessFrontend resources.'
      description: 'Retrieves the collection of EnvironmentAccessFrontend resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_access_frontends_post
      tags:
        - EnvironmentAccessFrontend
      responses:
        201:
          description: 'EnvironmentAccessFrontend resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentAccessFrontend resource.'
      description: 'Creates a EnvironmentAccessFrontend resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentAccessFrontend resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_access_frontends/{id}':
    get:
      operationId: api_environment_access_frontends_id_get
      tags:
        - EnvironmentAccessFrontend
      responses:
        200:
          description: 'EnvironmentAccessFrontend resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccessFrontend resource.'
      description: 'Retrieves a EnvironmentAccessFrontend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessFrontend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_access_frontends_id_put
      tags:
        - EnvironmentAccessFrontend
      responses:
        200:
          description: 'EnvironmentAccessFrontend resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentAccessFrontend resource.'
      description: 'Replaces the EnvironmentAccessFrontend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessFrontend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessFrontend resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_access_frontends_id_delete
      tags:
        - EnvironmentAccessFrontend
      responses:
        204:
          description: 'EnvironmentAccessFrontend resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentAccessFrontend resource.'
      description: 'Removes the EnvironmentAccessFrontend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessFrontend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_access_frontends_id_patch
      tags:
        - EnvironmentAccessFrontend
      responses:
        200:
          description: 'EnvironmentAccessFrontend resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessFrontend'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentAccessFrontend resource.'
      description: 'Updates the EnvironmentAccessFrontend resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessFrontend identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessFrontend resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessFrontend'
        required: true
      deprecated: false
    parameters: []
  /api/environment_access_rabbits:
    get:
      operationId: api_environment_access_rabbits_get_collection
      tags:
        - EnvironmentAccessRabbit
      responses:
        200:
          description: 'EnvironmentAccessRabbit collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessRabbit'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessRabbit'
      summary: 'Retrieves the collection of EnvironmentAccessRabbit resources.'
      description: 'Retrieves the collection of EnvironmentAccessRabbit resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_access_rabbits_post
      tags:
        - EnvironmentAccessRabbit
      responses:
        201:
          description: 'EnvironmentAccessRabbit resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentAccessRabbit resource.'
      description: 'Creates a EnvironmentAccessRabbit resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentAccessRabbit resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_access_rabbits/{id}':
    get:
      operationId: api_environment_access_rabbits_id_get
      tags:
        - EnvironmentAccessRabbit
      responses:
        200:
          description: 'EnvironmentAccessRabbit resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccessRabbit resource.'
      description: 'Retrieves a EnvironmentAccessRabbit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRabbit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_access_rabbits_id_put
      tags:
        - EnvironmentAccessRabbit
      responses:
        200:
          description: 'EnvironmentAccessRabbit resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentAccessRabbit resource.'
      description: 'Replaces the EnvironmentAccessRabbit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRabbit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessRabbit resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_access_rabbits_id_delete
      tags:
        - EnvironmentAccessRabbit
      responses:
        204:
          description: 'EnvironmentAccessRabbit resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentAccessRabbit resource.'
      description: 'Removes the EnvironmentAccessRabbit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRabbit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_access_rabbits_id_patch
      tags:
        - EnvironmentAccessRabbit
      responses:
        200:
          description: 'EnvironmentAccessRabbit resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRabbit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentAccessRabbit resource.'
      description: 'Updates the EnvironmentAccessRabbit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRabbit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessRabbit resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRabbit'
        required: true
      deprecated: false
    parameters: []
  /api/environment_access_redis:
    get:
      operationId: api_environment_access_redis_get_collection
      tags:
        - EnvironmentAccessRedis
      responses:
        200:
          description: 'EnvironmentAccessRedis collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessRedis'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccessRedis'
      summary: 'Retrieves the collection of EnvironmentAccessRedis resources.'
      description: 'Retrieves the collection of EnvironmentAccessRedis resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_access_redis_post
      tags:
        - EnvironmentAccessRedis
      responses:
        201:
          description: 'EnvironmentAccessRedis resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentAccessRedis resource.'
      description: 'Creates a EnvironmentAccessRedis resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentAccessRedis resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_access_redis/{id}':
    get:
      operationId: api_environment_access_redis_id_get
      tags:
        - EnvironmentAccessRedis
      responses:
        200:
          description: 'EnvironmentAccessRedis resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccessRedis resource.'
      description: 'Retrieves a EnvironmentAccessRedis resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRedis identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_access_redis_id_put
      tags:
        - EnvironmentAccessRedis
      responses:
        200:
          description: 'EnvironmentAccessRedis resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentAccessRedis resource.'
      description: 'Replaces the EnvironmentAccessRedis resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRedis identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessRedis resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_access_redis_id_delete
      tags:
        - EnvironmentAccessRedis
      responses:
        204:
          description: 'EnvironmentAccessRedis resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentAccessRedis resource.'
      description: 'Removes the EnvironmentAccessRedis resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRedis identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_access_redis_id_patch
      tags:
        - EnvironmentAccessRedis
      responses:
        200:
          description: 'EnvironmentAccessRedis resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccessRedis'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentAccessRedis resource.'
      description: 'Updates the EnvironmentAccessRedis resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccessRedis identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccessRedis resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessRedis'
        required: true
      deprecated: false
    parameters: []
  /api/environment_accesses:
    get:
      operationId: api_environment_accesses_get_collection
      tags:
        - EnvironmentAccess
      responses:
        200:
          description: 'EnvironmentAccess collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccess'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentAccess.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentAccess'
      summary: 'Retrieves the collection of EnvironmentAccess resources.'
      description: 'Retrieves the collection of EnvironmentAccess resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: environment
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'environment[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: frontend
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'frontend[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: backend
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'backend[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: database
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'database[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: devTools
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'devTools[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: redis
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'redis[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: rabbit
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'rabbit[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_accesses_post
      tags:
        - EnvironmentAccess
      responses:
        201:
          description: 'EnvironmentAccess resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentAccess resource.'
      description: 'Creates a EnvironmentAccess resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentAccess resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_accesses/{id}':
    get:
      operationId: api_environment_accesses_id_get
      tags:
        - EnvironmentAccess
      responses:
        200:
          description: 'EnvironmentAccess resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccess resource.'
      description: 'Retrieves a EnvironmentAccess resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccess identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_accesses_id_put
      tags:
        - EnvironmentAccess
      responses:
        200:
          description: 'EnvironmentAccess resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentAccess resource.'
      description: 'Replaces the EnvironmentAccess resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccess identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccess resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_accesses_id_delete
      tags:
        - EnvironmentAccess
      responses:
        204:
          description: 'EnvironmentAccess resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentAccess resource.'
      description: 'Removes the EnvironmentAccess resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccess identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_accesses_id_patch
      tags:
        - EnvironmentAccess
      responses:
        200:
          description: 'EnvironmentAccess resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentAccess resource.'
      description: 'Updates the EnvironmentAccess resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccess identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentAccess resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentAccess'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_accesses/{id}/all-data':
    get:
      operationId: api_environment_accesses_idall-data_get
      tags:
        - EnvironmentAccess
      responses:
        200:
          description: 'EnvironmentAccess resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentAccess resource.'
      description: 'Retrieves a EnvironmentAccess resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentAccess identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /api/environment_components:
    get:
      operationId: api_environment_components_get_collection
      tags:
        - EnvironmentComponent
      responses:
        200:
          description: 'EnvironmentComponent collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentComponent'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentComponent.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentComponent'
      summary: 'Retrieves the collection of EnvironmentComponent resources.'
      description: 'Retrieves the collection of EnvironmentComponent resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: componentVersion
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'componentVersion[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: environment
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'environment[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_components_post
      tags:
        - EnvironmentComponent
      responses:
        201:
          description: 'EnvironmentComponent resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentComponent resource.'
      description: 'Creates a EnvironmentComponent resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentComponent resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_components/{id}':
    get:
      operationId: api_environment_components_id_get
      tags:
        - EnvironmentComponent
      responses:
        200:
          description: 'EnvironmentComponent resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentComponent resource.'
      description: 'Retrieves a EnvironmentComponent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentComponent identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_components_id_put
      tags:
        - EnvironmentComponent
      responses:
        200:
          description: 'EnvironmentComponent resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentComponent resource.'
      description: 'Replaces the EnvironmentComponent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentComponent identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentComponent resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_components_id_delete
      tags:
        - EnvironmentComponent
      responses:
        204:
          description: 'EnvironmentComponent resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentComponent resource.'
      description: 'Removes the EnvironmentComponent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentComponent identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_components_id_patch
      tags:
        - EnvironmentComponent
      responses:
        200:
          description: 'EnvironmentComponent resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentComponent'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentComponent resource.'
      description: 'Updates the EnvironmentComponent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentComponent identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentComponent resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentComponent'
        required: true
      deprecated: false
    parameters: []
  /api/environment_env_vars:
    get:
      operationId: api_environment_env_vars_get_collection
      tags:
        - EnvironmentEnvVar
      responses:
        200:
          description: 'EnvironmentEnvVar collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentEnvVar'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentEnvVar'
      summary: 'Retrieves the collection of EnvironmentEnvVar resources.'
      description: 'Retrieves the collection of EnvironmentEnvVar resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: environment
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'environment[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: envVarType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'envVarType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environment_env_vars_post
      tags:
        - EnvironmentEnvVar
      responses:
        201:
          description: 'EnvironmentEnvVar resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a EnvironmentEnvVar resource.'
      description: 'Creates a EnvironmentEnvVar resource.'
      parameters: []
      requestBody:
        description: 'The new EnvironmentEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar'
        required: true
      deprecated: false
    parameters: []
  '/api/environment_env_vars/{id}':
    get:
      operationId: api_environment_env_vars_id_get
      tags:
        - EnvironmentEnvVar
      responses:
        200:
          description: 'EnvironmentEnvVar resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a EnvironmentEnvVar resource.'
      description: 'Retrieves a EnvironmentEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environment_env_vars_id_put
      tags:
        - EnvironmentEnvVar
      responses:
        200:
          description: 'EnvironmentEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the EnvironmentEnvVar resource.'
      description: 'Replaces the EnvironmentEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar'
        required: true
      deprecated: false
    delete:
      operationId: api_environment_env_vars_id_delete
      tags:
        - EnvironmentEnvVar
      responses:
        204:
          description: 'EnvironmentEnvVar resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the EnvironmentEnvVar resource.'
      description: 'Removes the EnvironmentEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environment_env_vars_id_patch
      tags:
        - EnvironmentEnvVar
      responses:
        200:
          description: 'EnvironmentEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/EnvironmentEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the EnvironmentEnvVar resource.'
      description: 'Updates the EnvironmentEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EnvironmentEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated EnvironmentEnvVar resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/EnvironmentEnvVar'
        required: true
      deprecated: false
    parameters: []
  /api/environments:
    get:
      operationId: api_environments_get_collection
      tags:
        - Environment
      responses:
        200:
          description: 'Environment collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Environment.jsonhal-Environment.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment-Environment.get'
      summary: 'Retrieves the collection of Environment resources.'
      description: 'Retrieves the collection of Environment resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: project.team.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'project.team.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: project
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'project[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: provider
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'provider[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: state
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'state[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: region
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'region[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: environmentAccess
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'environmentAccess[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'order[updatedAt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_environments_post
      tags:
        - Environment
      responses:
        201:
          description: 'Environment resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Environment resource.'
      description: 'Creates a Environment resource.'
      parameters: []
      requestBody:
        description: 'The new Environment resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Environment.jsonhal-Environment.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
        required: true
      deprecated: false
    parameters: []
  '/api/environments/{id}':
    get:
      operationId: api_environments_id_get
      tags:
        - Environment
      responses:
        200:
          description: 'Environment resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Environment resource.'
      description: 'Retrieves a Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_environments_id_put
      tags:
        - Environment
      responses:
        200:
          description: 'Environment resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Environment resource.'
      description: 'Replaces the Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Environment resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Environment.jsonhal-Environment.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
        required: true
      deprecated: false
    delete:
      operationId: api_environments_id_delete
      tags:
        - Environment
      responses:
        204:
          description: 'Environment resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Environment resource.'
      description: 'Removes the Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_environments_id_patch
      tags:
        - Environment
      responses:
        200:
          description: 'Environment resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Environment resource.'
      description: 'Updates the Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Environment resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Environment.jsonhal-Environment.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
        required: true
      deprecated: false
    parameters: []
  '/api/environments/{id}/costs':
    get:
      operationId: api_environments_idcosts_get
      tags:
        - Environment
      responses:
        200:
          description: 'Environment resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Environment resource.'
      description: 'Retrieves a Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/environments/{id}/export-database':
    put:
      operationId: api_environments_idexport-database_put
      tags:
        - Environment
      responses:
        200:
          description: 'Environment resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Environment resource.'
      description: 'Replaces the Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Environment resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Environment.jsonhal-Environment.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
        required: true
      deprecated: false
    parameters: []
  '/api/environments/{id}/export-media':
    put:
      operationId: api_environments_idexport-media_put
      tags:
        - Environment
      responses:
        200:
          description: 'Environment resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Environment resource.'
      description: 'Replaces the Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Environment resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Environment.jsonhal-Environment.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
        required: true
      deprecated: false
    parameters: []
  '/api/environments/{id}/import-database':
    post:
      operationId: api_environments_idimport-database_post
      tags:
        - Environment
      responses:
        201:
          description: 'Environment resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Environment resource.'
      description: 'Creates a Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The new Environment resource'
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
        required: true
      deprecated: false
    parameters: []
  '/api/environments/{id}/import-media':
    post:
      operationId: api_environments_idimport-media_post
      tags:
        - Environment
      responses:
        201:
          description: 'Environment resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Environment.jsonhal-Environment.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Environment-Environment.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Environment resource.'
      description: 'Creates a Environment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Environment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The new Environment resource'
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment-Environment.post'
        required: true
      deprecated: false
    parameters: []
  /api/exported_datas:
    get:
      operationId: api_exported_datas_get_collection
      tags:
        - ExportedData
      responses:
        200:
          description: 'ExportedData collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportedData'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ExportedData.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportedData'
      summary: 'Retrieves the collection of ExportedData resources.'
      description: 'Retrieves the collection of ExportedData resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: dataTransferDataType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dataTransferDataType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: environment
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'environment[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'order[createdAt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[updatedAt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_exported_datas_post
      tags:
        - ExportedData
      responses:
        201:
          description: 'ExportedData resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ExportedData'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ExportedData resource.'
      description: 'Creates a ExportedData resource.'
      parameters: []
      requestBody:
        description: 'The new ExportedData resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedData'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ExportedData.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ExportedData'
        required: true
      deprecated: false
    parameters: []
  '/api/exported_datas/{id}':
    get:
      operationId: api_exported_datas_id_get
      tags:
        - ExportedData
      responses:
        200:
          description: 'ExportedData resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ExportedData'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ExportedData resource.'
      description: 'Retrieves a ExportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ExportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_exported_datas_id_put
      tags:
        - ExportedData
      responses:
        200:
          description: 'ExportedData resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ExportedData'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ExportedData resource.'
      description: 'Replaces the ExportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ExportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ExportedData resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedData'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ExportedData.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ExportedData'
        required: true
      deprecated: false
    delete:
      operationId: api_exported_datas_id_delete
      tags:
        - ExportedData
      responses:
        204:
          description: 'ExportedData resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ExportedData resource.'
      description: 'Removes the ExportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ExportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_exported_datas_id_patch
      tags:
        - ExportedData
      responses:
        200:
          description: 'ExportedData resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ExportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ExportedData'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ExportedData resource.'
      description: 'Updates the ExportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ExportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ExportedData resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedData'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ExportedData.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ExportedData'
        required: true
      deprecated: false
    parameters: []
  /api/git_types:
    get:
      operationId: api_git_types_get_collection
      tags:
        - GitType
      responses:
        200:
          description: 'GitType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitType'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/GitType.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitType'
      summary: 'Retrieves the collection of GitType resources.'
      description: 'Retrieves the collection of GitType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_git_types_post
      tags:
        - GitType
      responses:
        201:
          description: 'GitType resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/GitType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GitType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/GitType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a GitType resource.'
      description: 'Creates a GitType resource.'
      parameters: []
      requestBody:
        description: 'The new GitType resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/GitType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GitType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/GitType'
        required: true
      deprecated: false
    parameters: []
  '/api/git_types/{id}':
    get:
      operationId: api_git_types_id_get
      tags:
        - GitType
      responses:
        200:
          description: 'GitType resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/GitType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GitType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/GitType'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a GitType resource.'
      description: 'Retrieves a GitType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'GitType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_git_types_id_put
      tags:
        - GitType
      responses:
        200:
          description: 'GitType resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/GitType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GitType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/GitType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the GitType resource.'
      description: 'Replaces the GitType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'GitType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated GitType resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/GitType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GitType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/GitType'
        required: true
      deprecated: false
    delete:
      operationId: api_git_types_id_delete
      tags:
        - GitType
      responses:
        204:
          description: 'GitType resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the GitType resource.'
      description: 'Removes the GitType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'GitType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_git_types_id_patch
      tags:
        - GitType
      responses:
        200:
          description: 'GitType resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/GitType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GitType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/GitType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the GitType resource.'
      description: 'Updates the GitType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'GitType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated GitType resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/GitType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GitType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/GitType'
        required: true
      deprecated: false
    parameters: []
  /api/gits:
    get:
      operationId: api_gits_get_collection
      tags:
        - Git
      responses:
        200:
          description: 'Git collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Git'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Git.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Git'
      summary: 'Retrieves the collection of Git resources.'
      description: 'Retrieves the collection of Git resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: project
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'project[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: gitType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'gitType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: credentialType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'credentialType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_gits_post
      tags:
        - Git
      responses:
        201:
          description: 'Git resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Git'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Git.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Git'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Git resource.'
      description: 'Creates a Git resource.'
      parameters: []
      requestBody:
        description: 'The new Git resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Git'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Git.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Git'
        required: true
      deprecated: false
    parameters: []
  '/api/gits/{id}':
    get:
      operationId: api_gits_id_get
      tags:
        - Git
      responses:
        200:
          description: 'Git resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Git'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Git.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Git'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Git resource.'
      description: 'Retrieves a Git resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Git identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_gits_id_put
      tags:
        - Git
      responses:
        200:
          description: 'Git resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Git'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Git.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Git'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Git resource.'
      description: 'Replaces the Git resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Git identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Git resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Git'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Git.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Git'
        required: true
      deprecated: false
    delete:
      operationId: api_gits_id_delete
      tags:
        - Git
      responses:
        204:
          description: 'Git resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Git resource.'
      description: 'Removes the Git resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Git identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_gits_id_patch
      tags:
        - Git
      responses:
        200:
          description: 'Git resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Git'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Git.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Git'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Git resource.'
      description: 'Updates the Git resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Git identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Git resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/Git'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Git.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Git'
        required: true
      deprecated: false
    parameters: []
  /api/imported_datas:
    get:
      operationId: api_imported_datas_get_collection
      tags:
        - ImportedData
      responses:
        200:
          description: 'ImportedData collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImportedData'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ImportedData.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImportedData'
      summary: 'Retrieves the collection of ImportedData resources.'
      description: 'Retrieves the collection of ImportedData resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: environment
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'environment[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dataTransferDataType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dataTransferDataType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: state
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'state[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'order[createdAt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[updatedAt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_imported_datas_post
      tags:
        - ImportedData
      responses:
        201:
          description: 'ImportedData resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ImportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ImportedData'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ImportedData resource.'
      description: 'Creates a ImportedData resource.'
      parameters: []
      requestBody:
        description: 'The new ImportedData resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ImportedData'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ImportedData.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ImportedData'
        required: true
      deprecated: false
    parameters: []
  '/api/imported_datas/{id}':
    get:
      operationId: api_imported_datas_id_get
      tags:
        - ImportedData
      responses:
        200:
          description: 'ImportedData resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ImportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ImportedData'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ImportedData resource.'
      description: 'Retrieves a ImportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ImportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_imported_datas_id_put
      tags:
        - ImportedData
      responses:
        200:
          description: 'ImportedData resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ImportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ImportedData'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ImportedData resource.'
      description: 'Replaces the ImportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ImportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ImportedData resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ImportedData'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ImportedData.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ImportedData'
        required: true
      deprecated: false
    delete:
      operationId: api_imported_datas_id_delete
      tags:
        - ImportedData
      responses:
        204:
          description: 'ImportedData resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ImportedData resource.'
      description: 'Removes the ImportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ImportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_imported_datas_id_patch
      tags:
        - ImportedData
      responses:
        200:
          description: 'ImportedData resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedData'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ImportedData.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ImportedData'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ImportedData resource.'
      description: 'Updates the ImportedData resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ImportedData identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ImportedData resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ImportedData'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ImportedData.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ImportedData'
        required: true
      deprecated: false
    parameters: []
  /api/organisation_env_vars:
    get:
      operationId: api_organisation_env_vars_get_collection
      tags:
        - OrganisationEnvVar
      responses:
        200:
          description: 'OrganisationEnvVar collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationEnvVar'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/OrganisationEnvVar.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationEnvVar'
      summary: 'Retrieves the collection of OrganisationEnvVar resources.'
      description: 'Retrieves the collection of OrganisationEnvVar resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: organisation
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organisation[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: envVarType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'envVarType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_organisation_env_vars_post
      tags:
        - OrganisationEnvVar
      responses:
        201:
          description: 'OrganisationEnvVar resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a OrganisationEnvVar resource.'
      description: 'Creates a OrganisationEnvVar resource.'
      parameters: []
      requestBody:
        description: 'The new OrganisationEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar'
        required: true
      deprecated: false
    parameters: []
  '/api/organisation_env_vars/{id}':
    get:
      operationId: api_organisation_env_vars_id_get
      tags:
        - OrganisationEnvVar
      responses:
        200:
          description: 'OrganisationEnvVar resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a OrganisationEnvVar resource.'
      description: 'Retrieves a OrganisationEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrganisationEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_organisation_env_vars_id_put
      tags:
        - OrganisationEnvVar
      responses:
        200:
          description: 'OrganisationEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the OrganisationEnvVar resource.'
      description: 'Replaces the OrganisationEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrganisationEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrganisationEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar'
        required: true
      deprecated: false
    delete:
      operationId: api_organisation_env_vars_id_delete
      tags:
        - OrganisationEnvVar
      responses:
        204:
          description: 'OrganisationEnvVar resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the OrganisationEnvVar resource.'
      description: 'Removes the OrganisationEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrganisationEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_organisation_env_vars_id_patch
      tags:
        - OrganisationEnvVar
      responses:
        200:
          description: 'OrganisationEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/OrganisationEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the OrganisationEnvVar resource.'
      description: 'Updates the OrganisationEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrganisationEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrganisationEnvVar resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/OrganisationEnvVar'
        required: true
      deprecated: false
    parameters: []
  /api/organisations:
    get:
      operationId: api_organisations_get_collection
      tags:
        - Organisation
      responses:
        200:
          description: 'Organisation collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-Organisation.get'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Organisation.jsonhal-Organisation.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-Organisation.get'
      summary: 'Retrieves the collection of Organisation resources.'
      description: 'Retrieves the collection of Organisation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_organisations_post
      tags:
        - Organisation
      responses:
        201:
          description: 'Organisation resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organisation.jsonhal-Organisation.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Organisation resource.'
      description: 'Creates a Organisation resource.'
      parameters: []
      requestBody:
        description: 'The new Organisation resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation-Organisation.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organisation.jsonhal-Organisation.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Organisation-Organisation.post'
        required: true
      deprecated: false
    parameters: []
  '/api/organisations/{id}':
    get:
      operationId: api_organisations_id_get
      tags:
        - Organisation
      responses:
        200:
          description: 'Organisation resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organisation.jsonhal-Organisation.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organisation resource.'
      description: 'Retrieves a Organisation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organisation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_organisations_id_put
      tags:
        - Organisation
      responses:
        200:
          description: 'Organisation resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organisation.jsonhal-Organisation.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Organisation resource.'
      description: 'Replaces the Organisation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organisation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organisation resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation-Organisation.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organisation.jsonhal-Organisation.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Organisation-Organisation.post'
        required: true
      deprecated: false
    delete:
      operationId: api_organisations_id_delete
      tags:
        - Organisation
      responses:
        204:
          description: 'Organisation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Organisation resource.'
      description: 'Removes the Organisation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organisation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_organisations_id_patch
      tags:
        - Organisation
      responses:
        200:
          description: 'Organisation resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organisation.jsonhal-Organisation.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisation-Organisation.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Organisation resource.'
      description: 'Updates the Organisation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organisation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organisation resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation-Organisation.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organisation.jsonhal-Organisation.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Organisation-Organisation.post'
        required: true
      deprecated: false
    parameters: []
  /api/prices:
    get:
      operationId: api_prices_get_collection
      tags:
        - Price
      responses:
        200:
          description: 'Price collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Price.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
      summary: 'Retrieves the collection of Price resources.'
      description: 'Retrieves the collection of Price resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: product
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'product[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_prices_post
      tags:
        - Price
      responses:
        201:
          description: 'Price resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Price.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Price'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Price resource.'
      description: 'Creates a Price resource.'
      parameters: []
      requestBody:
        description: 'The new Price resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Price.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Price'
        required: true
      deprecated: false
    parameters: []
  '/api/prices/{id}':
    get:
      operationId: api_prices_id_get
      tags:
        - Price
      responses:
        200:
          description: 'Price resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Price.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Price'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Price resource.'
      description: 'Retrieves a Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_prices_id_put
      tags:
        - Price
      responses:
        200:
          description: 'Price resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Price.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Price'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Price resource.'
      description: 'Replaces the Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Price resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Price.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Price'
        required: true
      deprecated: false
    delete:
      operationId: api_prices_id_delete
      tags:
        - Price
      responses:
        204:
          description: 'Price resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Price resource.'
      description: 'Removes the Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_prices_id_patch
      tags:
        - Price
      responses:
        200:
          description: 'Price resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Price.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Price'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Price resource.'
      description: 'Updates the Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Price resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Price.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Price'
        required: true
      deprecated: false
    parameters: []
  /api/products:
    get:
      operationId: api_products_get_collection
      tags:
        - Product
      responses:
        200:
          description: 'Product collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-Product.output'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Product.jsonhal-Product.output' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-Product.output'
      summary: 'Retrieves the collection of Product resources.'
      description: 'Retrieves the collection of Product resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: defaultPrice
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'defaultPrice[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: region
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'region[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_products_post
      tags:
        - Product
      responses:
        201:
          description: 'Product resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product.jsonhal-Product.output'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Product resource.'
      description: 'Creates a Product resource.'
      parameters: []
      requestBody:
        description: 'The new Product resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Product-Product.input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product.jsonhal-Product.input'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-Product.input'
        required: true
      deprecated: false
    parameters: []
  '/api/products/{id}':
    get:
      operationId: api_products_id_get
      tags:
        - Product
      responses:
        200:
          description: 'Product resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product.jsonhal-Product.output'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Product resource.'
      description: 'Retrieves a Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_products_id_put
      tags:
        - Product
      responses:
        200:
          description: 'Product resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product.jsonhal-Product.output'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Product resource.'
      description: 'Replaces the Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Product resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Product-Product.input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product.jsonhal-Product.input'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-Product.input'
        required: true
      deprecated: false
    delete:
      operationId: api_products_id_delete
      tags:
        - Product
      responses:
        204:
          description: 'Product resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Product resource.'
      description: 'Removes the Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_products_id_patch
      tags:
        - Product
      responses:
        200:
          description: 'Product resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product.jsonhal-Product.output'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-Product.output'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Product resource.'
      description: 'Updates the Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Product resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Product-Product.input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product.jsonhal-Product.input'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-Product.input'
        required: true
      deprecated: false
    parameters: []
  /api/project_env_vars:
    get:
      operationId: api_project_env_vars_get_collection
      tags:
        - ProjectEnvVar
      responses:
        200:
          description: 'ProjectEnvVar collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnvVar'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ProjectEnvVar.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnvVar'
      summary: 'Retrieves the collection of ProjectEnvVar resources.'
      description: 'Retrieves the collection of ProjectEnvVar resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: project
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'project[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: envVarType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'envVarType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_project_env_vars_post
      tags:
        - ProjectEnvVar
      responses:
        201:
          description: 'ProjectEnvVar resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ProjectEnvVar resource.'
      description: 'Creates a ProjectEnvVar resource.'
      parameters: []
      requestBody:
        description: 'The new ProjectEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar'
        required: true
      deprecated: false
    parameters: []
  '/api/project_env_vars/{id}':
    get:
      operationId: api_project_env_vars_id_get
      tags:
        - ProjectEnvVar
      responses:
        200:
          description: 'ProjectEnvVar resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ProjectEnvVar resource.'
      description: 'Retrieves a ProjectEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_project_env_vars_id_put
      tags:
        - ProjectEnvVar
      responses:
        200:
          description: 'ProjectEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ProjectEnvVar resource.'
      description: 'Replaces the ProjectEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar'
        required: true
      deprecated: false
    delete:
      operationId: api_project_env_vars_id_delete
      tags:
        - ProjectEnvVar
      responses:
        204:
          description: 'ProjectEnvVar resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ProjectEnvVar resource.'
      description: 'Removes the ProjectEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_project_env_vars_id_patch
      tags:
        - ProjectEnvVar
      responses:
        200:
          description: 'ProjectEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ProjectEnvVar resource.'
      description: 'Updates the ProjectEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectEnvVar resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectEnvVar'
        required: true
      deprecated: false
    parameters: []
  /api/project_type_version_env_var_examples:
    get:
      operationId: api_project_type_version_env_var_examples_get_collection
      tags:
        - ProjectTypeVersionEnvVarExample
      responses:
        200:
          description: 'ProjectTypeVersionEnvVarExample collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
      summary: 'Retrieves the collection of ProjectTypeVersionEnvVarExample resources.'
      description: 'Retrieves the collection of ProjectTypeVersionEnvVarExample resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: projectTypeVersionEnvVar
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'projectTypeVersionEnvVar[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_project_type_version_env_var_examples_post
      tags:
        - ProjectTypeVersionEnvVarExample
      responses:
        201:
          description: 'ProjectTypeVersionEnvVarExample resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ProjectTypeVersionEnvVarExample resource.'
      description: 'Creates a ProjectTypeVersionEnvVarExample resource.'
      parameters: []
      requestBody:
        description: 'The new ProjectTypeVersionEnvVarExample resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
        required: true
      deprecated: false
    parameters: []
  '/api/project_type_version_env_var_examples/{id}':
    get:
      operationId: api_project_type_version_env_var_examples_id_get
      tags:
        - ProjectTypeVersionEnvVarExample
      responses:
        200:
          description: 'ProjectTypeVersionEnvVarExample resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ProjectTypeVersionEnvVarExample resource.'
      description: 'Retrieves a ProjectTypeVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_project_type_version_env_var_examples_id_put
      tags:
        - ProjectTypeVersionEnvVarExample
      responses:
        200:
          description: 'ProjectTypeVersionEnvVarExample resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ProjectTypeVersionEnvVarExample resource.'
      description: 'Replaces the ProjectTypeVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectTypeVersionEnvVarExample resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
        required: true
      deprecated: false
    delete:
      operationId: api_project_type_version_env_var_examples_id_delete
      tags:
        - ProjectTypeVersionEnvVarExample
      responses:
        204:
          description: 'ProjectTypeVersionEnvVarExample resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ProjectTypeVersionEnvVarExample resource.'
      description: 'Removes the ProjectTypeVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_project_type_version_env_var_examples_id_patch
      tags:
        - ProjectTypeVersionEnvVarExample
      responses:
        200:
          description: 'ProjectTypeVersionEnvVarExample resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ProjectTypeVersionEnvVarExample resource.'
      description: 'Updates the ProjectTypeVersionEnvVarExample resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVarExample identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectTypeVersionEnvVarExample resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVarExample'
        required: true
      deprecated: false
    parameters: []
  /api/project_type_version_env_vars:
    get:
      operationId: api_project_type_version_env_vars_get_collection
      tags:
        - ProjectTypeVersionEnvVar
      responses:
        200:
          description: 'ProjectTypeVersionEnvVar collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
      summary: 'Retrieves the collection of ProjectTypeVersionEnvVar resources.'
      description: 'Retrieves the collection of ProjectTypeVersionEnvVar resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: projectTypeVersion
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'projectTypeVersion[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_project_type_version_env_vars_post
      tags:
        - ProjectTypeVersionEnvVar
      responses:
        201:
          description: 'ProjectTypeVersionEnvVar resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ProjectTypeVersionEnvVar resource.'
      description: 'Creates a ProjectTypeVersionEnvVar resource.'
      parameters: []
      requestBody:
        description: 'The new ProjectTypeVersionEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
        required: true
      deprecated: false
    parameters: []
  '/api/project_type_version_env_vars/{id}':
    get:
      operationId: api_project_type_version_env_vars_id_get
      tags:
        - ProjectTypeVersionEnvVar
      responses:
        200:
          description: 'ProjectTypeVersionEnvVar resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ProjectTypeVersionEnvVar resource.'
      description: 'Retrieves a ProjectTypeVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_project_type_version_env_vars_id_put
      tags:
        - ProjectTypeVersionEnvVar
      responses:
        200:
          description: 'ProjectTypeVersionEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ProjectTypeVersionEnvVar resource.'
      description: 'Replaces the ProjectTypeVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectTypeVersionEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
        required: true
      deprecated: false
    delete:
      operationId: api_project_type_version_env_vars_id_delete
      tags:
        - ProjectTypeVersionEnvVar
      responses:
        204:
          description: 'ProjectTypeVersionEnvVar resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ProjectTypeVersionEnvVar resource.'
      description: 'Removes the ProjectTypeVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_project_type_version_env_vars_id_patch
      tags:
        - ProjectTypeVersionEnvVar
      responses:
        200:
          description: 'ProjectTypeVersionEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ProjectTypeVersionEnvVar resource.'
      description: 'Updates the ProjectTypeVersionEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersionEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectTypeVersionEnvVar resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersionEnvVar'
        required: true
      deprecated: false
    parameters: []
  /api/project_type_versions:
    get:
      operationId: api_project_type_versions_get_collection
      tags:
        - ProjectTypeVersion
      responses:
        200:
          description: 'ProjectTypeVersion collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectTypeVersion'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ProjectTypeVersion.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectTypeVersion'
      summary: 'Retrieves the collection of ProjectTypeVersion resources.'
      description: 'Retrieves the collection of ProjectTypeVersion resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: projectType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'projectType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_project_type_versions_post
      tags:
        - ProjectTypeVersion
      responses:
        201:
          description: 'ProjectTypeVersion resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ProjectTypeVersion resource.'
      description: 'Creates a ProjectTypeVersion resource.'
      parameters: []
      requestBody:
        description: 'The new ProjectTypeVersion resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion'
        required: true
      deprecated: false
    parameters: []
  '/api/project_type_versions/{id}':
    get:
      operationId: api_project_type_versions_id_get
      tags:
        - ProjectTypeVersion
      responses:
        200:
          description: 'ProjectTypeVersion resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ProjectTypeVersion resource.'
      description: 'Retrieves a ProjectTypeVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_project_type_versions_id_put
      tags:
        - ProjectTypeVersion
      responses:
        200:
          description: 'ProjectTypeVersion resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ProjectTypeVersion resource.'
      description: 'Replaces the ProjectTypeVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectTypeVersion resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion'
        required: true
      deprecated: false
    delete:
      operationId: api_project_type_versions_id_delete
      tags:
        - ProjectTypeVersion
      responses:
        204:
          description: 'ProjectTypeVersion resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ProjectTypeVersion resource.'
      description: 'Removes the ProjectTypeVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_project_type_versions_id_patch
      tags:
        - ProjectTypeVersion
      responses:
        200:
          description: 'ProjectTypeVersion resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectTypeVersion'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ProjectTypeVersion resource.'
      description: 'Updates the ProjectTypeVersion resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectTypeVersion identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectTypeVersion resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectTypeVersion'
        required: true
      deprecated: false
    parameters: []
  /api/project_types:
    get:
      operationId: api_project_types_get_collection
      tags:
        - ProjectType
      responses:
        200:
          description: 'ProjectType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ProjectType.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
      summary: 'Retrieves the collection of ProjectType resources.'
      description: 'Retrieves the collection of ProjectType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_project_types_post
      tags:
        - ProjectType
      responses:
        201:
          description: 'ProjectType resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ProjectType resource.'
      description: 'Creates a ProjectType resource.'
      parameters: []
      requestBody:
        description: 'The new ProjectType resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectType'
        required: true
      deprecated: false
    parameters: []
  '/api/project_types/{id}':
    get:
      operationId: api_project_types_id_get
      tags:
        - ProjectType
      responses:
        200:
          description: 'ProjectType resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectType'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ProjectType resource.'
      description: 'Retrieves a ProjectType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_project_types_id_put
      tags:
        - ProjectType
      responses:
        200:
          description: 'ProjectType resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ProjectType resource.'
      description: 'Replaces the ProjectType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectType resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectType'
        required: true
      deprecated: false
    delete:
      operationId: api_project_types_id_delete
      tags:
        - ProjectType
      responses:
        204:
          description: 'ProjectType resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ProjectType resource.'
      description: 'Removes the ProjectType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_project_types_id_patch
      tags:
        - ProjectType
      responses:
        200:
          description: 'ProjectType resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectType.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectType'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ProjectType resource.'
      description: 'Updates the ProjectType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProjectType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProjectType resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectType'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ProjectType.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectType'
        required: true
      deprecated: false
    parameters: []
  /api/projects:
    get:
      operationId: api_projects_get_collection
      tags:
        - Project
      responses:
        200:
          description: 'Project collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project-Project.get'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Project.jsonhal-Project.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project-Project.get'
      summary: 'Retrieves the collection of Project resources.'
      description: 'Retrieves the collection of Project resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: team.organisation.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'team.organisation.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: team
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'team[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: git
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'git[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: serviceAccount
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'serviceAccount[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: state
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'state[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: projectTypeVersion
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'projectTypeVersion[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'order[updatedAt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_projects_post
      tags:
        - Project
      responses:
        201:
          description: 'Project resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Project.jsonhal-Project.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Project resource.'
      description: 'Creates a Project resource.'
      parameters: []
      requestBody:
        description: 'The new Project resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Project-Project.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Project.jsonhal-Project.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Project-Project.post'
        required: true
      deprecated: false
    parameters: []
  '/api/projects/{id}':
    get:
      operationId: api_projects_id_get
      tags:
        - Project
      responses:
        200:
          description: 'Project resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Project.jsonhal-Project.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Project resource.'
      description: 'Retrieves a Project resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Project identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_projects_id_put
      tags:
        - Project
      responses:
        200:
          description: 'Project resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Project.jsonhal-Project.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Project resource.'
      description: 'Replaces the Project resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Project identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Project resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Project-Project.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Project.jsonhal-Project.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Project-Project.post'
        required: true
      deprecated: false
    delete:
      operationId: api_projects_id_delete
      tags:
        - Project
      responses:
        204:
          description: 'Project resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Project resource.'
      description: 'Removes the Project resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Project identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_projects_id_patch
      tags:
        - Project
      responses:
        200:
          description: 'Project resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Project.jsonhal-Project.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Project resource.'
      description: 'Updates the Project resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Project identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Project resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Project-Project.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Project.jsonhal-Project.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Project-Project.post'
        required: true
      deprecated: false
    parameters: []
  '/api/projects/{id}/costs':
    get:
      operationId: api_projects_idcosts_get
      tags:
        - Project
      responses:
        200:
          description: 'Project resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Project.jsonhal-Project.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Project.get'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Project resource.'
      description: 'Retrieves a Project resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Project identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /api/providers:
    get:
      operationId: api_providers_get_collection
      tags:
        - Provider
      responses:
        200:
          description: 'Provider collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Provider.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
      summary: 'Retrieves the collection of Provider resources.'
      description: 'Retrieves the collection of Provider resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_providers_post
      tags:
        - Provider
      responses:
        201:
          description: 'Provider resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Provider resource.'
      description: 'Creates a Provider resource.'
      parameters: []
      requestBody:
        description: 'The new Provider resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider'
        required: true
      deprecated: false
    parameters: []
  '/api/providers/{id}':
    get:
      operationId: api_providers_id_get
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Provider resource.'
      description: 'Retrieves a Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Provider identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_providers_id_put
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Provider resource.'
      description: 'Replaces the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Provider identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Provider resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider'
        required: true
      deprecated: false
    delete:
      operationId: api_providers_id_delete
      tags:
        - Provider
      responses:
        204:
          description: 'Provider resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Provider resource.'
      description: 'Removes the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Provider identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_providers_id_patch
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Provider resource.'
      description: 'Updates the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Provider identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Provider resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider'
        required: true
      deprecated: false
    parameters: []
  /api/regions:
    get:
      operationId: api_regions_get_collection
      tags:
        - Region
      responses:
        200:
          description: 'Region collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Region.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
      summary: 'Retrieves the collection of Region resources.'
      description: 'Retrieves the collection of Region resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: provider
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'provider[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_regions_post
      tags:
        - Region
      responses:
        201:
          description: 'Region resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Region.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Region'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Region resource.'
      description: 'Creates a Region resource.'
      parameters: []
      requestBody:
        description: 'The new Region resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Region.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      deprecated: false
    parameters: []
  /api/regions/get-with-provider:
    get:
      operationId: api_regionsget-with-provider_get
      tags:
        - Region
      responses:
        200:
          description: 'Region resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Region.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Region'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Region resource.'
      description: 'Retrieves a Region resource.'
      parameters: []
      deprecated: false
    parameters: []
  '/api/regions/{id}':
    get:
      operationId: api_regions_id_get
      tags:
        - Region
      responses:
        200:
          description: 'Region resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Region.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Region'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Region resource.'
      description: 'Retrieves a Region resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Region identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_regions_id_put
      tags:
        - Region
      responses:
        200:
          description: 'Region resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Region.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Region'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Region resource.'
      description: 'Replaces the Region resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Region identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Region resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Region.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      deprecated: false
    delete:
      operationId: api_regions_id_delete
      tags:
        - Region
      responses:
        204:
          description: 'Region resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Region resource.'
      description: 'Removes the Region resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Region identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_regions_id_patch
      tags:
        - Region
      responses:
        200:
          description: 'Region resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Region.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Region'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Region resource.'
      description: 'Updates the Region resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Region identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Region resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Region.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      deprecated: false
    parameters: []
  '/api/regions/{id}/get-with-provider':
    get:
      operationId: api_regions_idget-with-provider_get
      tags:
        - Region
      responses:
        200:
          description: 'Region resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Region.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/Region'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Region resource.'
      description: 'Retrieves a Region resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Region identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /api/resource_type_limits:
    get:
      operationId: api_resource_type_limits_get_collection
      tags:
        - ResourceTypeLimit
      responses:
        200:
          description: 'ResourceTypeLimit collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceTypeLimit'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ResourceTypeLimit.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceTypeLimit'
      summary: 'Retrieves the collection of ResourceTypeLimit resources.'
      description: 'Retrieves the collection of ResourceTypeLimit resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_resource_type_limits_post
      tags:
        - ResourceTypeLimit
      responses:
        201:
          description: 'ResourceTypeLimit resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ResourceTypeLimit resource.'
      description: 'Creates a ResourceTypeLimit resource.'
      parameters: []
      requestBody:
        description: 'The new ResourceTypeLimit resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit'
        required: true
      deprecated: false
    parameters: []
  '/api/resource_type_limits/{id}':
    get:
      operationId: api_resource_type_limits_id_get
      tags:
        - ResourceTypeLimit
      responses:
        200:
          description: 'ResourceTypeLimit resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ResourceTypeLimit resource.'
      description: 'Retrieves a ResourceTypeLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceTypeLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_resource_type_limits_id_put
      tags:
        - ResourceTypeLimit
      responses:
        200:
          description: 'ResourceTypeLimit resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ResourceTypeLimit resource.'
      description: 'Replaces the ResourceTypeLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceTypeLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ResourceTypeLimit resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit'
        required: true
      deprecated: false
    delete:
      operationId: api_resource_type_limits_id_delete
      tags:
        - ResourceTypeLimit
      responses:
        204:
          description: 'ResourceTypeLimit resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ResourceTypeLimit resource.'
      description: 'Removes the ResourceTypeLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceTypeLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_resource_type_limits_id_patch
      tags:
        - ResourceTypeLimit
      responses:
        200:
          description: 'ResourceTypeLimit resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceTypeLimit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ResourceTypeLimit resource.'
      description: 'Updates the ResourceTypeLimit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceTypeLimit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ResourceTypeLimit resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ResourceTypeLimit'
        required: true
      deprecated: false
    parameters: []
  /api/resource_types:
    get:
      operationId: api_resource_types_get_collection
      tags:
        - ResourceType
      responses:
        200:
          description: 'ResourceType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceType-ResourceType.output'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.output' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceType-ResourceType.output'
      summary: 'Retrieves the collection of ResourceType resources.'
      description: 'Retrieves the collection of ResourceType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: resourceTypeLimit
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resourceTypeLimit[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_resource_types_post
      tags:
        - ResourceType
      responses:
        201:
          description: 'ResourceType resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.output'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ResourceType resource.'
      description: 'Creates a ResourceType resource.'
      parameters: []
      requestBody:
        description: 'The new ResourceType resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceType-ResourceType.input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.input'
          text/html:
            schema:
              $ref: '#/components/schemas/ResourceType-ResourceType.input'
        required: true
      deprecated: false
    parameters: []
  '/api/resource_types/{id}':
    get:
      operationId: api_resource_types_id_get
      tags:
        - ResourceType
      responses:
        200:
          description: 'ResourceType resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.output'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ResourceType resource.'
      description: 'Retrieves a ResourceType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_resource_types_id_put
      tags:
        - ResourceType
      responses:
        200:
          description: 'ResourceType resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.output'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ResourceType resource.'
      description: 'Replaces the ResourceType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ResourceType resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceType-ResourceType.input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.input'
          text/html:
            schema:
              $ref: '#/components/schemas/ResourceType-ResourceType.input'
        required: true
      deprecated: false
    delete:
      operationId: api_resource_types_id_delete
      tags:
        - ResourceType
      responses:
        204:
          description: 'ResourceType resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ResourceType resource.'
      description: 'Removes the ResourceType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_resource_types_id_patch
      tags:
        - ResourceType
      responses:
        200:
          description: 'ResourceType resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.output'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceType-ResourceType.output'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ResourceType resource.'
      description: 'Updates the ResourceType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ResourceType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ResourceType resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceType-ResourceType.input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResourceType.jsonhal-ResourceType.input'
          text/html:
            schema:
              $ref: '#/components/schemas/ResourceType-ResourceType.input'
        required: true
      deprecated: false
    parameters: []
  /api/role_groups:
    get:
      operationId: api_role_groups_get_collection
      tags:
        - RoleGroup
      responses:
        200:
          description: 'RoleGroup collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleGroup'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/RoleGroup.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleGroup'
      summary: 'Retrieves the collection of RoleGroup resources.'
      description: 'Retrieves the collection of RoleGroup resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_role_groups_post
      tags:
        - RoleGroup
      responses:
        201:
          description: 'RoleGroup resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGroup'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RoleGroup.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/RoleGroup'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a RoleGroup resource.'
      description: 'Creates a RoleGroup resource.'
      parameters: []
      requestBody:
        description: 'The new RoleGroup resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/RoleGroup'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RoleGroup.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/RoleGroup'
        required: true
      deprecated: false
    parameters: []
  '/api/role_groups/{id}':
    get:
      operationId: api_role_groups_id_get
      tags:
        - RoleGroup
      responses:
        200:
          description: 'RoleGroup resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGroup'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RoleGroup.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/RoleGroup'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a RoleGroup resource.'
      description: 'Retrieves a RoleGroup resource.'
      parameters:
        -
          name: id
          in: path
          description: 'RoleGroup identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_role_groups_id_put
      tags:
        - RoleGroup
      responses:
        200:
          description: 'RoleGroup resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGroup'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RoleGroup.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/RoleGroup'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the RoleGroup resource.'
      description: 'Replaces the RoleGroup resource.'
      parameters:
        -
          name: id
          in: path
          description: 'RoleGroup identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated RoleGroup resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/RoleGroup'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RoleGroup.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/RoleGroup'
        required: true
      deprecated: false
    delete:
      operationId: api_role_groups_id_delete
      tags:
        - RoleGroup
      responses:
        204:
          description: 'RoleGroup resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the RoleGroup resource.'
      description: 'Removes the RoleGroup resource.'
      parameters:
        -
          name: id
          in: path
          description: 'RoleGroup identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_role_groups_id_patch
      tags:
        - RoleGroup
      responses:
        200:
          description: 'RoleGroup resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGroup'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RoleGroup.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/RoleGroup'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the RoleGroup resource.'
      description: 'Updates the RoleGroup resource.'
      parameters:
        -
          name: id
          in: path
          description: 'RoleGroup identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated RoleGroup resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/RoleGroup'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RoleGroup.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/RoleGroup'
        required: true
      deprecated: false
    parameters: []
  /api/service_account_gits:
    get:
      operationId: api_service_account_gits_get_collection
      tags:
        - ServiceAccountGit
      responses:
        200:
          description: 'ServiceAccountGit collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountGit'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ServiceAccountGit.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountGit'
      summary: 'Retrieves the collection of ServiceAccountGit resources.'
      description: 'Retrieves the collection of ServiceAccountGit resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: serviceAccount
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'serviceAccount[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_service_account_gits_post
      tags:
        - ServiceAccountGit
      responses:
        201:
          description: 'ServiceAccountGit resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ServiceAccountGit resource.'
      description: 'Creates a ServiceAccountGit resource.'
      parameters: []
      requestBody:
        description: 'The new ServiceAccountGit resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit'
        required: true
      deprecated: false
    parameters: []
  '/api/service_account_gits/{id}':
    get:
      operationId: api_service_account_gits_id_get
      tags:
        - ServiceAccountGit
      responses:
        200:
          description: 'ServiceAccountGit resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ServiceAccountGit resource.'
      description: 'Retrieves a ServiceAccountGit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountGit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_service_account_gits_id_put
      tags:
        - ServiceAccountGit
      responses:
        200:
          description: 'ServiceAccountGit resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ServiceAccountGit resource.'
      description: 'Replaces the ServiceAccountGit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountGit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ServiceAccountGit resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit'
        required: true
      deprecated: false
    delete:
      operationId: api_service_account_gits_id_delete
      tags:
        - ServiceAccountGit
      responses:
        204:
          description: 'ServiceAccountGit resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ServiceAccountGit resource.'
      description: 'Removes the ServiceAccountGit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountGit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_service_account_gits_id_patch
      tags:
        - ServiceAccountGit
      responses:
        200:
          description: 'ServiceAccountGit resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountGit'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ServiceAccountGit resource.'
      description: 'Updates the ServiceAccountGit resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountGit identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ServiceAccountGit resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccountGit'
        required: true
      deprecated: false
    parameters: []
  /api/service_account_registries:
    get:
      operationId: api_service_account_registries_get_collection
      tags:
        - ServiceAccountRegistry
      responses:
        200:
          description: 'ServiceAccountRegistry collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountRegistry'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountRegistry'
      summary: 'Retrieves the collection of ServiceAccountRegistry resources.'
      description: 'Retrieves the collection of ServiceAccountRegistry resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: serviceAccount
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'serviceAccount[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_service_account_registries_post
      tags:
        - ServiceAccountRegistry
      responses:
        201:
          description: 'ServiceAccountRegistry resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ServiceAccountRegistry resource.'
      description: 'Creates a ServiceAccountRegistry resource.'
      parameters: []
      requestBody:
        description: 'The new ServiceAccountRegistry resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry'
        required: true
      deprecated: false
    parameters: []
  '/api/service_account_registries/{id}':
    get:
      operationId: api_service_account_registries_id_get
      tags:
        - ServiceAccountRegistry
      responses:
        200:
          description: 'ServiceAccountRegistry resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ServiceAccountRegistry resource.'
      description: 'Retrieves a ServiceAccountRegistry resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountRegistry identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_service_account_registries_id_put
      tags:
        - ServiceAccountRegistry
      responses:
        200:
          description: 'ServiceAccountRegistry resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ServiceAccountRegistry resource.'
      description: 'Replaces the ServiceAccountRegistry resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountRegistry identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ServiceAccountRegistry resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry'
        required: true
      deprecated: false
    delete:
      operationId: api_service_account_registries_id_delete
      tags:
        - ServiceAccountRegistry
      responses:
        204:
          description: 'ServiceAccountRegistry resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ServiceAccountRegistry resource.'
      description: 'Removes the ServiceAccountRegistry resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountRegistry identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_service_account_registries_id_patch
      tags:
        - ServiceAccountRegistry
      responses:
        200:
          description: 'ServiceAccountRegistry resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccountRegistry'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ServiceAccountRegistry resource.'
      description: 'Updates the ServiceAccountRegistry resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccountRegistry identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ServiceAccountRegistry resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccountRegistry'
        required: true
      deprecated: false
    parameters: []
  /api/service_accounts:
    get:
      operationId: api_service_accounts_get_collection
      tags:
        - ServiceAccount
      responses:
        200:
          description: 'ServiceAccount collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccount'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/ServiceAccount.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccount'
      summary: 'Retrieves the collection of ServiceAccount resources.'
      description: 'Retrieves the collection of ServiceAccount resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: project
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'project[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: serviceAccountGit
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'serviceAccountGit[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: serviceAccountRegistry
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'serviceAccountRegistry[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_service_accounts_post
      tags:
        - ServiceAccount
      responses:
        201:
          description: 'ServiceAccount resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccount.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ServiceAccount resource.'
      description: 'Creates a ServiceAccount resource.'
      parameters: []
      requestBody:
        description: 'The new ServiceAccount resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccount.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
        required: true
      deprecated: false
    parameters: []
  '/api/service_accounts/{id}':
    get:
      operationId: api_service_accounts_id_get
      tags:
        - ServiceAccount
      responses:
        200:
          description: 'ServiceAccount resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccount.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ServiceAccount resource.'
      description: 'Retrieves a ServiceAccount resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccount identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_service_accounts_id_put
      tags:
        - ServiceAccount
      responses:
        200:
          description: 'ServiceAccount resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccount.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ServiceAccount resource.'
      description: 'Replaces the ServiceAccount resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccount identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ServiceAccount resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccount.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
        required: true
      deprecated: false
    delete:
      operationId: api_service_accounts_id_delete
      tags:
        - ServiceAccount
      responses:
        204:
          description: 'ServiceAccount resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ServiceAccount resource.'
      description: 'Removes the ServiceAccount resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccount identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_service_accounts_id_patch
      tags:
        - ServiceAccount
      responses:
        200:
          description: 'ServiceAccount resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ServiceAccount.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ServiceAccount resource.'
      description: 'Updates the ServiceAccount resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ServiceAccount identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ServiceAccount resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServiceAccount.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
        required: true
      deprecated: false
    parameters: []
  /api/states:
    get:
      operationId: api_states_get_collection
      tags:
        - State
      responses:
        200:
          description: 'State collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/State'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/State.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/State'
      summary: 'Retrieves the collection of State resources.'
      description: 'Retrieves the collection of State resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_states_post
      tags:
        - State
      responses:
        201:
          description: 'State resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/State'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/State.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/State'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a State resource.'
      description: 'Creates a State resource.'
      parameters: []
      requestBody:
        description: 'The new State resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/State'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/State.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      deprecated: false
    parameters: []
  '/api/states/{id}':
    get:
      operationId: api_states_id_get
      tags:
        - State
      responses:
        200:
          description: 'State resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/State'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/State.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/State'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a State resource.'
      description: 'Retrieves a State resource.'
      parameters:
        -
          name: id
          in: path
          description: 'State identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_states_id_put
      tags:
        - State
      responses:
        200:
          description: 'State resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/State'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/State.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/State'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the State resource.'
      description: 'Replaces the State resource.'
      parameters:
        -
          name: id
          in: path
          description: 'State identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated State resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/State'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/State.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      deprecated: false
    delete:
      operationId: api_states_id_delete
      tags:
        - State
      responses:
        204:
          description: 'State resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the State resource.'
      description: 'Removes the State resource.'
      parameters:
        -
          name: id
          in: path
          description: 'State identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_states_id_patch
      tags:
        - State
      responses:
        200:
          description: 'State resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/State'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/State.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/State'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the State resource.'
      description: 'Updates the State resource.'
      parameters:
        -
          name: id
          in: path
          description: 'State identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated State resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/State'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/State.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      deprecated: false
    parameters: []
  /api/team_env_vars:
    get:
      operationId: api_team_env_vars_get_collection
      tags:
        - TeamEnvVar
      responses:
        200:
          description: 'TeamEnvVar collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamEnvVar'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/TeamEnvVar.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamEnvVar'
      summary: 'Retrieves the collection of TeamEnvVar resources.'
      description: 'Retrieves the collection of TeamEnvVar resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: team
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'team[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: envVarType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'envVarType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_team_env_vars_post
      tags:
        - TeamEnvVar
      responses:
        201:
          description: 'TeamEnvVar resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a TeamEnvVar resource.'
      description: 'Creates a TeamEnvVar resource.'
      parameters: []
      requestBody:
        description: 'The new TeamEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/TeamEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TeamEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/TeamEnvVar'
        required: true
      deprecated: false
    parameters: []
  '/api/team_env_vars/{id}':
    get:
      operationId: api_team_env_vars_id_get
      tags:
        - TeamEnvVar
      responses:
        200:
          description: 'TeamEnvVar resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a TeamEnvVar resource.'
      description: 'Retrieves a TeamEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'TeamEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_team_env_vars_id_put
      tags:
        - TeamEnvVar
      responses:
        200:
          description: 'TeamEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the TeamEnvVar resource.'
      description: 'Replaces the TeamEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'TeamEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TeamEnvVar resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/TeamEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TeamEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/TeamEnvVar'
        required: true
      deprecated: false
    delete:
      operationId: api_team_env_vars_id_delete
      tags:
        - TeamEnvVar
      responses:
        204:
          description: 'TeamEnvVar resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the TeamEnvVar resource.'
      description: 'Removes the TeamEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'TeamEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_team_env_vars_id_patch
      tags:
        - TeamEnvVar
      responses:
        200:
          description: 'TeamEnvVar resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TeamEnvVar.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/TeamEnvVar'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the TeamEnvVar resource.'
      description: 'Updates the TeamEnvVar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'TeamEnvVar identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TeamEnvVar resource'
        content:
          
          
          application/json:
            schema:
              $ref: '#/components/schemas/TeamEnvVar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TeamEnvVar.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/TeamEnvVar'
        required: true
      deprecated: false
    parameters: []
  /api/teams:
    get:
      operationId: api_teams_get_collection
      tags:
        - Team
      responses:
        200:
          description: 'Team collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team-Team.get'
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/Team.jsonhal-Team.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team-Team.get'
      summary: 'Retrieves the collection of Team resources.'
      description: 'Retrieves the collection of Team resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'exists[organisation]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: organisation
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organisation[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_teams_post
      tags:
        - Team
      responses:
        201:
          description: 'Team resource created'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Team.jsonhal-Team.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Team resource.'
      description: 'Creates a Team resource.'
      parameters: []
      requestBody:
        description: 'The new Team resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Team-Team.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Team.jsonhal-Team.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Team-Team.post'
        required: true
      deprecated: false
    parameters: []
  '/api/teams/{id}':
    get:
      operationId: api_teams_id_get
      tags:
        - Team
      responses:
        200:
          description: 'Team resource'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Team.jsonhal-Team.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Team resource.'
      description: 'Retrieves a Team resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Team identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_teams_id_put
      tags:
        - Team
      responses:
        200:
          description: 'Team resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Team.jsonhal-Team.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Team resource.'
      description: 'Replaces the Team resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Team identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Team resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Team-Team.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Team.jsonhal-Team.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Team-Team.post'
        required: true
      deprecated: false
    delete:
      operationId: api_teams_id_delete
      tags:
        - Team
      responses:
        204:
          description: 'Team resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Team resource.'
      description: 'Removes the Team resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Team identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_teams_id_patch
      tags:
        - Team
      responses:
        200:
          description: 'Team resource updated'
          content:
            
            application/json:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Team.jsonhal-Team.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Team-Team.get'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Team resource.'
      description: 'Updates the Team resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Team identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Team resource'
        content:
          
          application/json:
            schema:
              $ref: '#/components/schemas/Team-Team.post'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Team.jsonhal-Team.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Team-Team.post'
        required: true
      deprecated: false
    parameters: []
  /api/users:
    get:
      operationId: api_users_get_collection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded: { type: array, items: { $ref: '#/components/schemas/User.jsonhal' } }
                  totalItems: { type: integer, minimum: 0 }
                  itemsPerPage: { type: integer, minimum: 0 }
                  _links: { type: object, properties: { self: { type: object, properties: { href: { type: string, format: iri-reference } } }, first: { type: object, properties: { href: { type: string, format: iri-reference } } }, last: { type: object, properties: { href: { type: string, format: iri-reference } } }, next: { type: object, properties: { href: { type: string, format: iri-reference } } }, previous: { type: object, properties: { href: { type: string, format: iri-reference } } } } }
                required:
                  - _links
                  - _embedded
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: roleGroup
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'roleGroup[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_users_post
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    parameters: []
  /api/users/check-email:
    get:
      operationId: api_userscheck-email_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'It will check the email is exist in database or not'
      description: 'It will check the email is exist in database or not'
      parameters: []
      deprecated: false
    parameters: []
  /api/users/check-username:
    get:
      operationId: api_userscheck-username_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'It will check the username is exist in database or not'
      description: 'It will check the username is exist in database or not'
      parameters: []
      deprecated: false
    parameters: []
  /api/users/discover_mercure:
    get:
      operationId: api_usersdiscover_mercure_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'It will discovers for mercure JWT token for you - w/ take consideration your permissions'
      description: 'It will discovers for mercure JWT token for you - w/ take consideration your permissions'
      parameters: []
      deprecated: false
    parameters: []
  /api/users/register:
    post:
      operationId: api_usersregister_post
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    parameters: []
  '/api/users/{id}':
    get:
      operationId: api_users_id_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_users_id_put
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the User resource.'
      description: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    delete:
      operationId: api_users_id_delete
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_users_id_patch
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the User resource.'
      description: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonhal'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    parameters: []
  '/api/users/{id}/administrate':
    get:
      operationId: api_users_idadministrate_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/users/{id}/finance/costs':
    get:
      operationId: api_users_idfinancecosts_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/users/{id}/finance/invoices':
    get:
      operationId: api_users_idfinanceinvoices_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/users/{id}/finance/pay':
    get:
      operationId: api_users_idfinancepay_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/users/{id}/finance/subscribe-info':
    get:
      operationId: api_users_idfinancesubscribe-info_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonhal'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/users/{id}/remove-account':
    delete:
      operationId: api_users_idremove-account_delete
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /authentication_token:
    ref: 'JWT Token'
    post:
      operationId: postCredentialsItem
      tags:
        - Token
      responses:
        200:
          description: 'Get JWT token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
      summary: 'Get JWT token to login.'
      description: ''
      parameters: []
      requestBody:
        description: 'Generate new JWT Token'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: false
      deprecated: false
      security: []
    parameters: []
components:
  schemas:
    Component:
      type: object
      description: 'Class Component'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        componentVersion:
          type: array
          items:
            type: string
            format: iri-reference
        projectType:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Component.jsonhal:
      type: object
      description: 'Class Component'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        componentVersion:
          type: array
          items:
            type: string
            format: iri-reference
        projectType:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentResourceLimit:
      type: object
      description: 'Class ComponentResourceLimit'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        minValue:
          type: integer
          nullable: true
        maxValue:
          type: integer
          nullable: true
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        resourceType:
          type: string
          format: iri-reference
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentResourceLimit.jsonhal:
      type: object
      description: 'Class ComponentResourceLimit'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        minValue:
          type: integer
          nullable: true
        maxValue:
          type: integer
          nullable: true
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        resourceType:
          type: string
          format: iri-reference
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentVersion:
      type: object
      description: 'Class ComponentVersion'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        component:
          type: string
          format: iri-reference
          nullable: true
        componentVersionEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        project:
          type: array
          items:
            type: string
            format: iri-reference
        environmentComponent:
          type: array
          items:
            type: string
            format: iri-reference
        componentResourceLimit:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentVersion.jsonhal:
      type: object
      description: 'Class ComponentVersion'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        component:
          type: string
          format: iri-reference
          nullable: true
        componentVersionEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        project:
          type: array
          items:
            type: string
            format: iri-reference
        environmentComponent:
          type: array
          items:
            type: string
            format: iri-reference
        componentResourceLimit:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentVersionEnvVar:
      type: object
      description: 'Class ComponentVersionEnvVar'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
        componentVersionEnvVarExample:
          type: array
          items:
            type: string
            format: iri-reference
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentVersionEnvVar.jsonhal:
      type: object
      description: 'Class ComponentVersionEnvVar'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
        componentVersionEnvVarExample:
          type: array
          items:
            type: string
            format: iri-reference
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentVersionEnvVarExample:
      type: object
      description: 'Class ComponentVersionEnvVarExample'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        componentVersionEnvVar:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComponentVersionEnvVarExample.jsonhal:
      type: object
      description: 'Class ComponentVersionEnvVarExample'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        componentVersionEnvVar:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CredentialType:
      type: object
      description: 'Class CredentialType'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        git:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CredentialType-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    CredentialType-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    CredentialType.jsonhal:
      type: object
      description: 'Class CredentialType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        git:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CredentialType.jsonhal-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    CredentialType.jsonhal-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    DataTransferDataType:
      type: object
      description: 'Class DataTransferDataType'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
          nullable: true
        exportedData:
          type: array
          items:
            type: string
            format: iri-reference
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DataTransferDataType.jsonhal:
      type: object
      description: 'Class DataTransferDataType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        name:
          type: string
          nullable: true
        exportedData:
          type: array
          items:
            type: string
            format: iri-reference
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DataTransferType:
      type: object
      description: 'Class DataTransferType'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DataTransferType.jsonhal:
      type: object
      description: 'Class DataTransferType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvVarType:
      type: object
      description: 'Class EnvVarType'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        projectEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        environmentEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        componentVersionEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        organisationEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        teamEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvVarType.jsonhal:
      type: object
      description: 'Class EnvVarType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        projectEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        environmentEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        componentVersionEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        organisationEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        teamEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Environment-Environment.get:
      type: object
      description: 'Class Environment'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        dataTransferSettings:
          type: string
          nullable: true
        isStripDatabase:
          type: boolean
          nullable: true
        isAllowOutgoingEmails:
          type: boolean
          nullable: true
        isInitSampleData:
          type: boolean
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        provider:
          type: string
          format: iri-reference
          nullable: true
        envVar:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentEnvVar-Environment.get'
        state:
          type: string
          format: iri-reference
          nullable: true
        environmentComponent:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentComponent-Environment.get'
        region:
          type: string
          format: iri-reference
          nullable: true
        exportedData:
          type: array
          items:
            type: string
            format: iri-reference
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Environment-Environment.post:
      type: object
      description: 'Class Environment'
      deprecated: false
      properties:
        name:
          type: string
          nullable: true
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        dataTransferSettings:
          type: string
          nullable: true
        isStripDatabase:
          type: boolean
          nullable: true
        isAllowOutgoingEmails:
          type: boolean
          nullable: true
        isInitSampleData:
          type: boolean
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        provider:
          type: string
          format: iri-reference
          nullable: true
        envVar:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentEnvVar-Environment.post'
        state:
          type: string
          format: iri-reference
          nullable: true
        environmentComponent:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentComponent-Environment.post'
        region:
          type: string
          format: iri-reference
          nullable: true
        exportedData:
          type: array
          items:
            type: string
            format: iri-reference
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
    Environment.jsonhal-Environment.get:
      type: object
      description: 'Class Environment'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        dataTransferSettings:
          type: string
          nullable: true
        isStripDatabase:
          type: boolean
          nullable: true
        isAllowOutgoingEmails:
          type: boolean
          nullable: true
        isInitSampleData:
          type: boolean
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        provider:
          type: string
          format: iri-reference
          nullable: true
        envVar:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal-Environment.get'
        state:
          type: string
          format: iri-reference
          nullable: true
        environmentComponent:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentComponent.jsonhal-Environment.get'
        region:
          type: string
          format: iri-reference
          nullable: true
        exportedData:
          type: array
          items:
            type: string
            format: iri-reference
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Environment.jsonhal-Environment.post:
      type: object
      description: 'Class Environment'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        name:
          type: string
          nullable: true
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        dataTransferSettings:
          type: string
          nullable: true
        isStripDatabase:
          type: boolean
          nullable: true
        isAllowOutgoingEmails:
          type: boolean
          nullable: true
        isInitSampleData:
          type: boolean
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        provider:
          type: string
          format: iri-reference
          nullable: true
        envVar:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentEnvVar.jsonhal-Environment.post'
        state:
          type: string
          format: iri-reference
          nullable: true
        environmentComponent:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentComponent.jsonhal-Environment.post'
        region:
          type: string
          format: iri-reference
          nullable: true
        exportedData:
          type: array
          items:
            type: string
            format: iri-reference
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
    EnvironmentAccess:
      type: object
      description: 'Class EnvironmentAccess'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        frontend:
          type: string
          format: iri-reference
          nullable: true
        backend:
          type: string
          format: iri-reference
          nullable: true
        database:
          type: string
          format: iri-reference
          nullable: true
        devTools:
          type: string
          format: iri-reference
          nullable: true
        redis:
          type: string
          format: iri-reference
          nullable: true
        rabbit:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccess.jsonhal:
      type: object
      description: 'Class EnvironmentAccess'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        frontend:
          type: string
          format: iri-reference
          nullable: true
        backend:
          type: string
          format: iri-reference
          nullable: true
        database:
          type: string
          format: iri-reference
          nullable: true
        devTools:
          type: string
          format: iri-reference
          nullable: true
        redis:
          type: string
          format: iri-reference
          nullable: true
        rabbit:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessBackend:
      type: object
      description: 'Class EnvironmentAccessBackend'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessBackend.jsonhal:
      type: object
      description: 'Class EnvironmentAccessBackend'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessDatabase:
      type: object
      description: 'Class EnvironmentAccessDatabase'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
        port:
          type: integer
          nullable: true
        scheme:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        rootPassword:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessDatabase.jsonhal:
      type: object
      description: 'Class EnvironmentAccessDatabase'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
        port:
          type: integer
          nullable: true
        scheme:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        rootPassword:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessDevTools:
      type: object
      description: 'Class EnvironmentAccessDevTools'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessDevTools.jsonhal:
      type: object
      description: 'Class EnvironmentAccessDevTools'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessFrontend:
      type: object
      description: 'Class EnvironmentAccessFrontend'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessFrontend.jsonhal:
      type: object
      description: 'Class EnvironmentAccessFrontend'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessRabbit:
      type: object
      description: 'Class EnvironmentAccessRabbit'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
        port:
          type: integer
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessRabbit.jsonhal:
      type: object
      description: 'Class EnvironmentAccessRabbit'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
        port:
          type: integer
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessRedis:
      type: object
      description: 'Class EnvironmentAccessRedis'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
        port:
          type: integer
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentAccessRedis.jsonhal:
      type: object
      description: 'Class EnvironmentAccessRedis'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
        port:
          type: integer
          nullable: true
        password:
          type: string
          nullable: true
        environmentAccess:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentComponent:
      type: object
      description: 'Class EnvironmentComponent'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        node:
          type: integer
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentComponent-Environment.get:
      type: object
      description: ''
      deprecated: false
      properties:
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        node:
          type: integer
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
    EnvironmentComponent-Environment.post:
      type: object
      description: ''
      deprecated: false
      properties:
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        node:
          type: integer
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
    EnvironmentComponent.jsonhal:
      type: object
      description: 'Class EnvironmentComponent'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        node:
          type: integer
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EnvironmentComponent.jsonhal-Environment.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        node:
          type: integer
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
    EnvironmentComponent.jsonhal-Environment.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        node:
          type: integer
          nullable: true
        componentVersion:
          type: string
          format: iri-reference
          nullable: true
    EnvironmentEnvVar:
      type: object
      description: 'Class EnvVar'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    EnvironmentEnvVar-Environment.get:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    EnvironmentEnvVar-Environment.post:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    EnvironmentEnvVar.jsonhal:
      type: object
      description: 'Class EnvVar'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    EnvironmentEnvVar.jsonhal-Environment.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    EnvironmentEnvVar.jsonhal-Environment.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    ExportedData:
      type: object
      description: 'Class ExportedData'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        dataTransferDataType:
          type: string
          format: iri-reference
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ExportedData.jsonhal:
      type: object
      description: 'Class ExportedData'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        dataTransferDataType:
          type: string
          format: iri-reference
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    Git:
      type: object
      description: 'Class Git'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        repo:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        sshPrivateKeyInput:
          type: string
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        gitType:
          type: string
          format: iri-reference
          nullable: true
        credentialType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Git-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        repo:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        sshPrivateKeyInput:
          type: string
          nullable: true
        gitType:
          anyOf:
            -
              $ref: '#/components/schemas/GitType-Project.get'
          nullable: true
        credentialType:
          anyOf:
            -
              $ref: '#/components/schemas/CredentialType-Project.get'
          nullable: true
    Git-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        repo:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        sshPrivateKeyInput:
          type: string
          nullable: true
        gitType:
          anyOf:
            -
              $ref: '#/components/schemas/GitType-Project.post'
          nullable: true
        credentialType:
          anyOf:
            -
              $ref: '#/components/schemas/CredentialType-Project.post'
          nullable: true
    Git.jsonhal:
      type: object
      description: 'Class Git'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        repo:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        sshPrivateKeyInput:
          type: string
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        gitType:
          type: string
          format: iri-reference
          nullable: true
        credentialType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Git.jsonhal-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        repo:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        sshPrivateKeyInput:
          type: string
          nullable: true
        gitType:
          anyOf:
            -
              $ref: '#/components/schemas/GitType.jsonhal-Project.get'
          nullable: true
        credentialType:
          anyOf:
            -
              $ref: '#/components/schemas/CredentialType.jsonhal-Project.get'
          nullable: true
    Git.jsonhal-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        repo:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        sshPrivateKeyInput:
          type: string
          nullable: true
        gitType:
          anyOf:
            -
              $ref: '#/components/schemas/GitType.jsonhal-Project.post'
          nullable: true
        credentialType:
          anyOf:
            -
              $ref: '#/components/schemas/CredentialType.jsonhal-Project.post'
          nullable: true
    GitType:
      type: object
      description: 'Class GitType'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        git:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GitType-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    GitType-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    GitType.jsonhal:
      type: object
      description: 'Class GitType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        git:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GitType.jsonhal-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    GitType.jsonhal-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    ImportedData:
      type: object
      description: 'Class ImportedData'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        dataTransferDataType:
          type: string
          format: iri-reference
          nullable: true
        state:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ImportedData.jsonhal:
      type: object
      description: 'Class ImportedData'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        environment:
          type: string
          format: iri-reference
          nullable: true
        dataTransferDataType:
          type: string
          format: iri-reference
          nullable: true
        state:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    Organisation-Organisation.get:
      type: object
      description: 'Class Organisation'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        team:
          type: array
          items:
            type: string
            format: iri-reference
        organisationEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationEnvVar-Organisation.get'
    Organisation-Organisation.post:
      type: object
      description: 'Class Organisation'
      deprecated: false
      properties:
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        team:
          type: array
          items:
            type: string
            format: iri-reference
        organisationEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationEnvVar-Organisation.post'
    Organisation.jsonhal-Organisation.get:
      type: object
      description: 'Class Organisation'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        team:
          type: array
          items:
            type: string
            format: iri-reference
        organisationEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationEnvVar.jsonhal-Organisation.get'
    Organisation.jsonhal-Organisation.post:
      type: object
      description: 'Class Organisation'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        team:
          type: array
          items:
            type: string
            format: iri-reference
        organisationEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationEnvVar.jsonhal-Organisation.post'
    OrganisationEnvVar:
      type: object
      description: 'Class OrganisationEnvVar'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        organisation:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    OrganisationEnvVar-Organisation.get:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    OrganisationEnvVar-Organisation.post:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    OrganisationEnvVar.jsonhal:
      type: object
      description: 'Class OrganisationEnvVar'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        organisation:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    OrganisationEnvVar.jsonhal-Organisation.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    OrganisationEnvVar.jsonhal-Organisation.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    Price:
      type: object
      description: 'Class Price'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        product:
          anyOf:
            -
              $ref: '#/components/schemas/Product'
          nullable: true
        products:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Price-Product.input:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
    Price-Product.output:
      type: object
      description: ''
      deprecated: false
      properties:
        paymentId:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
    Price.jsonhal:
      type: object
      description: 'Class Price'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        product:
          anyOf:
            -
              $ref: '#/components/schemas/Product.jsonhal'
          nullable: true
        products:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Price.jsonhal-Product.input:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
    Price.jsonhal-Product.output:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        paymentId:
          type: string
          nullable: true
        amount:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
    Product:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        prices:
          type: array
          items:
            type: string
            format: iri-reference
        defaultPrice:
          type: string
          format: iri-reference
          nullable: true
        region:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Product-Product.input:
      type: object
      description: 'Class Product'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price-Product.input'
        defaultPrice:
          anyOf:
            -
              $ref: '#/components/schemas/Price-Product.input'
          nullable: true
        region:
          type: string
          format: iri-reference
          nullable: true
    Product-Product.output:
      type: object
      description: 'Class Product'
      deprecated: false
      properties:
        paymentId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price-Product.output'
        defaultPrice:
          anyOf:
            -
              $ref: '#/components/schemas/Price-Product.output'
          nullable: true
        region:
          type: string
          format: iri-reference
          nullable: true
    Product.jsonhal:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        prices:
          type: array
          items:
            type: string
            format: iri-reference
        defaultPrice:
          type: string
          format: iri-reference
          nullable: true
        region:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Product.jsonhal-Product.input:
      type: object
      description: 'Class Product'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price.jsonhal-Product.input'
        defaultPrice:
          anyOf:
            -
              $ref: '#/components/schemas/Price.jsonhal-Product.input'
          nullable: true
        region:
          type: string
          format: iri-reference
          nullable: true
    Product.jsonhal-Product.output:
      type: object
      description: 'Class Product'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        paymentId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metadata:
          type: array
          items:
            type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price.jsonhal-Product.output'
        defaultPrice:
          anyOf:
            -
              $ref: '#/components/schemas/Price.jsonhal-Product.output'
          nullable: true
        region:
          type: string
          format: iri-reference
          nullable: true
    Project-Project.get:
      type: object
      description: 'Class Project'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        code:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        isInitProjectSkeleton:
          type: boolean
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        team:
          type: string
          format: iri-reference
          nullable: true
        git:
          anyOf:
            -
              $ref: '#/components/schemas/Git-Project.get'
          nullable: true
        serviceAccount:
          anyOf:
            -
              $ref: '#/components/schemas/ServiceAccount-Project.get'
          nullable: true
        state:
          type: string
          format: iri-reference
          nullable: true
        projectEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/ProjectEnvVar-Project.get'
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        componentVersion:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Project-Project.post:
      type: object
      description: 'Class Project'
      deprecated: false
      properties:
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        code:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        isInitProjectSkeleton:
          type: boolean
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        team:
          type: string
          format: iri-reference
          nullable: true
        git:
          anyOf:
            -
              $ref: '#/components/schemas/Git-Project.post'
          nullable: true
        projectEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/ProjectEnvVar-Project.post'
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        componentVersion:
          type: array
          items:
            type: string
            format: iri-reference
    Project.jsonhal-Project.get:
      type: object
      description: 'Class Project'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        code:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        isInitProjectSkeleton:
          type: boolean
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        team:
          type: string
          format: iri-reference
          nullable: true
        git:
          anyOf:
            -
              $ref: '#/components/schemas/Git.jsonhal-Project.get'
          nullable: true
        serviceAccount:
          anyOf:
            -
              $ref: '#/components/schemas/ServiceAccount.jsonhal-Project.get'
          nullable: true
        state:
          type: string
          format: iri-reference
          nullable: true
        projectEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/ProjectEnvVar.jsonhal-Project.get'
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        componentVersion:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Project.jsonhal-Project.post:
      type: object
      description: 'Class Project'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        cpu:
          type: integer
          nullable: true
        memory:
          type: integer
          nullable: true
        storage:
          type: integer
          nullable: true
        code:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        isInitProjectSkeleton:
          type: boolean
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        team:
          type: string
          format: iri-reference
          nullable: true
        git:
          anyOf:
            -
              $ref: '#/components/schemas/Git.jsonhal-Project.post'
          nullable: true
        projectEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/ProjectEnvVar.jsonhal-Project.post'
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        componentVersion:
          type: array
          items:
            type: string
            format: iri-reference
    ProjectEnvVar:
      type: object
      description: 'Class ProjectEnvVar'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    ProjectEnvVar-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    ProjectEnvVar-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    ProjectEnvVar.jsonhal:
      type: object
      description: 'Class ProjectEnvVar'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    ProjectEnvVar.jsonhal-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    ProjectEnvVar.jsonhal-Project.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    ProjectType:
      type: object
      description: 'Class ProjectType'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        projectTypeVersion:
          type: array
          items:
            type: string
            format: iri-reference
        requiredComponent:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProjectType.jsonhal:
      type: object
      description: 'Class ProjectType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        projectTypeVersion:
          type: array
          items:
            type: string
            format: iri-reference
        requiredComponent:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProjectTypeVersion:
      type: object
      description: 'Class ProjectTypeVersion'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        project:
          type: array
          items:
            type: string
            format: iri-reference
        projectType:
          type: string
          format: iri-reference
          nullable: true
        projectTypeVersionEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        componentResourceLimit:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProjectTypeVersion.jsonhal:
      type: object
      description: 'Class ProjectTypeVersion'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        project:
          type: array
          items:
            type: string
            format: iri-reference
        projectType:
          type: string
          format: iri-reference
          nullable: true
        projectTypeVersionEnvVar:
          type: array
          items:
            type: string
            format: iri-reference
        componentResourceLimit:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProjectTypeVersionEnvVar:
      type: object
      description: 'Class ProjectTypeEnvVar'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        projectTypeVersionEnvVarExample:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProjectTypeVersionEnvVar.jsonhal:
      type: object
      description: 'Class ProjectTypeEnvVar'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        projectTypeVersion:
          type: string
          format: iri-reference
          nullable: true
        projectTypeVersionEnvVarExample:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProjectTypeVersionEnvVarExample:
      type: object
      description: 'Class ProjectTypeEnvVarExample'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        projectTypeVersionEnvVar:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProjectTypeVersionEnvVarExample.jsonhal:
      type: object
      description: 'Class ProjectTypeEnvVarExample'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        projectTypeVersionEnvVar:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Provider:
      type: object
      description: 'Class Provider'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        region:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Provider.jsonhal:
      type: object
      description: 'Class Provider'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        region:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Region:
      type: object
      description: 'Class Region'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        kubecostUrl:
          type: string
          nullable: true
        kubecostUser:
          type: string
          nullable: true
        kubecostPass:
          type: string
          nullable: true
        changeKubecostPass:
          type: string
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        provider:
          type: string
          format: iri-reference
          nullable: true
        products:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Region.jsonhal:
      type: object
      description: 'Class Region'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        kubecostUrl:
          type: string
          nullable: true
        kubecostUser:
          type: string
          nullable: true
        kubecostPass:
          type: string
          nullable: true
        changeKubecostPass:
          type: string
          nullable: true
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        provider:
          type: string
          format: iri-reference
          nullable: true
        products:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ResourceType-ResourceType.input:
      type: object
      description: 'Class ResourceType'
      deprecated: false
      properties:
        name:
          type: string
          nullable: true
        resourceTypeLimit:
          anyOf:
            -
              $ref: '#/components/schemas/ResourceTypeLimit-ResourceType.input'
          nullable: true
    ResourceType-ResourceType.output:
      type: object
      description: 'Class ResourceType'
      deprecated: false
      properties:
        name:
          type: string
          nullable: true
        resourceTypeLimit:
          anyOf:
            -
              $ref: '#/components/schemas/ResourceTypeLimit-ResourceType.output'
          nullable: true
    ResourceType.jsonhal-ResourceType.input:
      type: object
      description: 'Class ResourceType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        name:
          type: string
          nullable: true
        resourceTypeLimit:
          anyOf:
            -
              $ref: '#/components/schemas/ResourceTypeLimit.jsonhal-ResourceType.input'
          nullable: true
    ResourceType.jsonhal-ResourceType.output:
      type: object
      description: 'Class ResourceType'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        name:
          type: string
          nullable: true
        resourceTypeLimit:
          anyOf:
            -
              $ref: '#/components/schemas/ResourceTypeLimit.jsonhal-ResourceType.output'
          nullable: true
    ResourceTypeLimit:
      type: object
      description: 'Class ResourceTypeLimit'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        projectMinValue:
          type: integer
          nullable: true
        projectMaxValue:
          type: integer
          nullable: true
        environmentMinValue:
          type: integer
          nullable: true
        environmentMaxValue:
          type: integer
          nullable: true
        componentMinValue:
          type: integer
          nullable: true
        componentMaxValue:
          type: integer
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ResourceTypeLimit-ResourceType.input:
      type: object
      description: ''
      deprecated: false
      properties:
        projectMinValue:
          type: integer
          nullable: true
        projectMaxValue:
          type: integer
          nullable: true
        environmentMinValue:
          type: integer
          nullable: true
        environmentMaxValue:
          type: integer
          nullable: true
        componentMinValue:
          type: integer
          nullable: true
        componentMaxValue:
          type: integer
          nullable: true
    ResourceTypeLimit-ResourceType.output:
      type: object
      description: ''
      deprecated: false
      properties:
        projectMinValue:
          type: integer
          nullable: true
        projectMaxValue:
          type: integer
          nullable: true
        environmentMinValue:
          type: integer
          nullable: true
        environmentMaxValue:
          type: integer
          nullable: true
        componentMinValue:
          type: integer
          nullable: true
        componentMaxValue:
          type: integer
          nullable: true
    ResourceTypeLimit.jsonhal:
      type: object
      description: 'Class ResourceTypeLimit'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        projectMinValue:
          type: integer
          nullable: true
        projectMaxValue:
          type: integer
          nullable: true
        environmentMinValue:
          type: integer
          nullable: true
        environmentMaxValue:
          type: integer
          nullable: true
        componentMinValue:
          type: integer
          nullable: true
        componentMaxValue:
          type: integer
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ResourceTypeLimit.jsonhal-ResourceType.input:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        projectMinValue:
          type: integer
          nullable: true
        projectMaxValue:
          type: integer
          nullable: true
        environmentMinValue:
          type: integer
          nullable: true
        environmentMaxValue:
          type: integer
          nullable: true
        componentMinValue:
          type: integer
          nullable: true
        componentMaxValue:
          type: integer
          nullable: true
    ResourceTypeLimit.jsonhal-ResourceType.output:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        projectMinValue:
          type: integer
          nullable: true
        projectMaxValue:
          type: integer
          nullable: true
        environmentMinValue:
          type: integer
          nullable: true
        environmentMaxValue:
          type: integer
          nullable: true
        componentMinValue:
          type: integer
          nullable: true
        componentMaxValue:
          type: integer
          nullable: true
    RoleGroup:
      type: object
      description: 'Class RoleGroup'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
        roles:
          type: array
          items:
            type: string
        users:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    RoleGroup.jsonhal:
      type: object
      description: 'Class RoleGroup'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
        roles:
          type: array
          items:
            type: string
        users:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ServiceAccount:
      type: object
      description: 'Class ServiceAccount'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        serviceAccountGit:
          type: string
          format: iri-reference
          nullable: true
        serviceAccountRegistry:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ServiceAccount-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        serviceAccountGit:
          anyOf:
            -
              $ref: '#/components/schemas/ServiceAccountGit-Project.get'
          nullable: true
        serviceAccountRegistry:
          anyOf:
            -
              $ref: '#/components/schemas/ServiceAccountRegistry-Project.get'
          nullable: true
    ServiceAccount.jsonhal:
      type: object
      description: 'Class ServiceAccount'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        project:
          type: string
          format: iri-reference
          nullable: true
        serviceAccountGit:
          type: string
          format: iri-reference
          nullable: true
        serviceAccountRegistry:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ServiceAccount.jsonhal-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        serviceAccountGit:
          anyOf:
            -
              $ref: '#/components/schemas/ServiceAccountGit.jsonhal-Project.get'
          nullable: true
        serviceAccountRegistry:
          anyOf:
            -
              $ref: '#/components/schemas/ServiceAccountRegistry.jsonhal-Project.get'
          nullable: true
    ServiceAccountGit:
      type: object
      description: 'Class Git'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        isExternal:
          type: boolean
          nullable: true
        url:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        serviceAccount:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ServiceAccountGit-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        isExternal:
          type: boolean
          nullable: true
        url:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
    ServiceAccountGit.jsonhal:
      type: object
      description: 'Class Git'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        isExternal:
          type: boolean
          nullable: true
        url:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
        serviceAccount:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ServiceAccountGit.jsonhal-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        isExternal:
          type: boolean
          nullable: true
        url:
          type: string
          nullable: true
        sshPrivateKey:
          type: string
          nullable: true
    ServiceAccountRegistry:
      type: object
      description: 'Class Registry'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        quota:
          type: integer
          nullable: true
        instance:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        serviceAccount:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ServiceAccountRegistry-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        url:
          type: string
          nullable: true
    ServiceAccountRegistry.jsonhal:
      type: object
      description: 'Class Registry'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        quota:
          type: integer
          nullable: true
        instance:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        serviceAccount:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
    ServiceAccountRegistry.jsonhal-Project.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        url:
          type: string
          nullable: true
    State:
      type: object
      description: 'Class State'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        seqNumber:
          type: integer
          nullable: true
        project:
          type: array
          items:
            type: string
            format: iri-reference
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    State.jsonhal:
      type: object
      description: 'Class State'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        seqNumber:
          type: integer
          nullable: true
        project:
          type: array
          items:
            type: string
            format: iri-reference
        environment:
          type: array
          items:
            type: string
            format: iri-reference
        importedData:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Team-Team.get:
      type: object
      description: 'Class Team'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        user:
          type: array
          items:
            type: string
            format: iri-reference
        project:
          type: array
          items:
            type: string
            format: iri-reference
        organisation:
          type: string
          format: iri-reference
          nullable: true
        teamEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/TeamEnvVar-Team.get'
    Team-Team.post:
      type: object
      description: 'Class Team'
      deprecated: false
      properties:
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        user:
          type: array
          items:
            type: string
            format: iri-reference
        project:
          type: array
          items:
            type: string
            format: iri-reference
        organisation:
          type: string
          format: iri-reference
          nullable: true
        teamEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/TeamEnvVar-Team.post'
    Team.jsonhal-Team.get:
      type: object
      description: 'Class Team'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        user:
          type: array
          items:
            type: string
            format: iri-reference
        project:
          type: array
          items:
            type: string
            format: iri-reference
        organisation:
          type: string
          format: iri-reference
          nullable: true
        teamEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/TeamEnvVar.jsonhal-Team.get'
    Team.jsonhal-Team.post:
      type: object
      description: 'Class Team'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        name:
          type: string
          nullable: true
        codeName:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        user:
          type: array
          items:
            type: string
            format: iri-reference
        project:
          type: array
          items:
            type: string
            format: iri-reference
        organisation:
          type: string
          format: iri-reference
          nullable: true
        teamEnvVar:
          type: array
          items:
            $ref: '#/components/schemas/TeamEnvVar.jsonhal-Team.post'
    TeamEnvVar:
      type: object
      description: 'Class TeamEnvVar'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        team:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    TeamEnvVar-Team.get:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    TeamEnvVar-Team.post:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    TeamEnvVar.jsonhal:
      type: object
      description: 'Class TeamEnvVar'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        team:
          type: string
          format: iri-reference
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rawValue:
          readOnly: true
          type: string
          nullable: true
    TeamEnvVar.jsonhal-Team.get:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    TeamEnvVar.jsonhal-Team.post:
      type: object
      description: ''
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isEncrypted:
          type: boolean
          nullable: true
        envVarType:
          type: string
          format: iri-reference
          nullable: true
    User:
      type: object
      description: 'Class User'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        authenticatorId:
          type: integer
          nullable: true
        fullname:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        roles:
          type: array
          items:
            type: string
          nullable: true
        currency:
          type: string
          nullable: true
        password:
          type: string
        changePassword:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        roleGroup:
          type: string
          format: iri-reference
          nullable: true
        team:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        salt:
          readOnly: true
          description: 'not needed when using the "bcrypt" algorithm in security.yaml'
          type: string
          nullable: true
        userIdentifier:
          readOnly: true
          type: string
    User.jsonhal:
      type: object
      description: 'Class User'
      deprecated: false
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: iri-reference
        id:
          readOnly: true
          type: integer
        uuid:
          readOnly: true
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        authenticatorId:
          type: integer
          nullable: true
        fullname:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        roles:
          type: array
          items:
            type: string
          nullable: true
        currency:
          type: string
          nullable: true
        password:
          type: string
        changePassword:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        roleGroup:
          type: string
          format: iri-reference
          nullable: true
        team:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        salt:
          readOnly: true
          description: 'not needed when using the "bcrypt" algorithm in security.yaml'
          type: string
          nullable: true
        userIdentifier:
          readOnly: true
          type: string
    Token:
      type: object
      properties:
        token:
          type: string
          readOnly: true
        data:
          type: object
          properties:
            id:
              type: integer
            fullname:
              type: string
            roles:
              type: array
              items:
                type: string
            teams:
              type: array
              items:
                type: object
                properties:
                  uuid: { type: string }
    Credentials:
      type: object
      properties:
        id:
          type: string
          example: 'johndoe@example.com OR johndoe'
        password:
          type: string
          example: password
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes:
    apiKey:
      type: apiKey
      description: 'Value for the Authorization header parameter.'
      name: Authorization
      in: header
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  -
    apiKey: []
tags: []
